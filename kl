local FenrilHub_BloxFruit = {}
function FenrilHub_BloxFruit:RUN()
	repeat task.wait() warn("FENRIL HUB BLOX FRUIT LOADED ... !") until game:IsLoaded() 

	-- if game:IsLoaded() then
	-- 	local UserInputService = game:GetService("UserInputService")
	-- 	local TweenService = game:GetService("TweenService")
	-- 	local LocalPlayer = game:GetService("Players").LocalPlayer
		
	-- 	local UILibrary = Instance.new("ScreenGui")
	-- 	local Load = Instance.new("Frame")
	-- 	local LoadButton = Instance.new("ImageButton")
		
	-- 	UILibrary.Name = "UILibrary"
	-- 	UILibrary.Parent = game:GetService("CoreGui")
	-- 	UILibrary.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
		
	-- 	Load.Name = "Load"
	-- 	Load.Parent = UILibrary
	-- 	Load.Active = true
	-- 	Load.AnchorPoint = Vector2.new(0.5, 0.5)
	-- 	Load.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
	-- 	Load.BackgroundTransparency = 1
	-- 	Load.BorderSizePixel = 0
	-- 	Load.BackgroundTransparency = 1
		
	-- 	local uitoggled = false
	-- 	UserInputService.InputBegan:Connect(function(io, p)
	-- 		if io.KeyCode == Enum.KeyCode.RightControl then
	-- 			if uitoggled == false then
	-- 				uitoggled = true
	-- 				UILibrary.Enabled = false
	-- 			else
	-- 				UILibrary.Enabled = true
	-- 				uitoggled = false
	-- 			end
	-- 		end
	-- 	end)
		
	-- 	local Blur = Instance.new("BlurEffect")
		
	-- 	Blur.Size = 0
	-- 	Blur.Parent = game.Lighting
		
	-- 	if game.Workspace.Camera.FieldOfView == 50 then
	-- 		return game.Workspace.Camera.FieldOfView == 70
	-- 	end
		
	-- 	local LoadText = Instance.new("Frame")
	-- 	local UIListLayoutLoadText = Instance.new("UIListLayout")
	-- 	local TitleLoad = Instance.new("TextLabel")
		
	-- 	LoadText.Name = "LoadText"
	-- 	LoadText.Parent = Load
	-- 	LoadText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	-- 	LoadText.BackgroundTransparency = 1.000
	-- 	LoadText.Size = UDim2.new(0, 500, 0, 50)
	-- 	LoadText.ClipsDescendants = true
		
	-- 	UIListLayoutLoadText.Name = "UIListLayoutLoadText"
	-- 	UIListLayoutLoadText.Parent = LoadText
	-- 	UIListLayoutLoadText.FillDirection = Enum.FillDirection.Horizontal
	-- 	UIListLayoutLoadText.HorizontalAlignment = Enum.HorizontalAlignment.Center
	-- 	UIListLayoutLoadText.SortOrder = Enum.SortOrder.LayoutOrder
		
	-- 	function LoadFunction()
	-- 		print("Starts Scripr Premium.")
	-- 		TweenService:Create(game.Workspace.Camera,TweenInfo.new(.4, Enum.EasingStyle.Back, Enum.EasingDirection.InOut),{FieldOfView = 50}):Play()
		
	-- 		TweenService:Create(Blur,TweenInfo.new(.4, Enum.EasingStyle.Back, Enum.EasingDirection.InOut),{Size = 20}):Play()
		
	-- 		TweenService:Create(Load,TweenInfo.new(.4, Enum.EasingStyle.Back, Enum.EasingDirection.InOut),{Position = UDim2.new(0.5, 0, 0.5, 0)}):Play()
		
	-- 		TweenService:Create(Load,TweenInfo.new(.4, Enum.EasingStyle.Quart, Enum.EasingDirection.In),{BackgroundTransparency = 0}):Play()
		
	-- 		wait(.5)
	-- 		TweenService:Create(LoadButton,TweenInfo.new(.4, Enum.EasingStyle.Quart, Enum.EasingDirection.In),{ImageTransparency = 0}):Play()
		
	-- 		LoadButton.MouseEnter:Connect(function()
	-- 			TweenService:Create(LoadButton,TweenInfo.new(.2, Enum.EasingStyle.Back, Enum.EasingDirection.InOut),{Size = UDim2.new(0, 80, 0, 80)}):Play()
	-- 		end)
		
	-- 		LoadButton.MouseLeave:Connect(function()
	-- 			TweenService:Create(LoadButton,TweenInfo.new(.2, Enum.EasingStyle.Back, Enum.EasingDirection.InOut),{Size = UDim2.new(0, 70, 0, 70)}):Play()
	-- 		end)
		
	-- 		local LoadFocus = false
	-- 		print("Loading Interface .. !")
	-- 		if LoadFocus == false then
	-- 			LoadFocus = true
	-- 			TweenService:Create(LoadButton,TweenInfo.new(.2, Enum.EasingStyle.Back, Enum.EasingDirection.InOut),{Rotation = 180}):Play()
	-- 			TweenService:Create(LoadButton,TweenInfo.new(.4, Enum.EasingStyle.Quart, Enum.EasingDirection.In),{ImageTransparency = 1}):Play()
	-- 			wait(.5)
	-- 			LoadButton:Destroy()
		
	-- 			local Alphes = loadstring(game:HttpGet('https://alphes.net/Files/Notifier.lua'))()
	-- 			Alphes:Notifier("SCRIPT BLOX FRUIT LOADED COMPLETE . . . ! ",2) wait(2.3)
	-- 			Alphes:Notifier("DEVELOPER : KAITO KUNG",2)
		
	-- 			wait(2)
	-- 			TweenService:Create(Load,TweenInfo.new(.4, Enum.EasingStyle.Back, Enum.EasingDirection.InOut),{Position = UDim2.new(0.5, 0, 0.025, 0)}):Play()
	-- 			TweenService:Create(Blur,TweenInfo.new(.4, Enum.EasingStyle.Back, Enum.EasingDirection.InOut),{Size = 0}):Play()
	-- 			TweenService:Create(game.Workspace.Camera,TweenInfo.new(.4, Enum.EasingStyle.Back, Enum.EasingDirection.InOut),{FieldOfView = 70}):Play()
	-- 		end
	-- 	end
	-- 	LoadFunction()
	-- end

	--------------------- [ Task: Visibel ] ---------------------
	local GetService = function(serviceName) return game:GetService(serviceName) end
	local Workspace = GetService("Workspace")
	local ReplicatedStorage = GetService("ReplicatedStorage")
	local Remotes = ReplicatedStorage.Remotes
	local RunService = GetService("RunService")

	local UserInputService = GetService("UserInputService")
	local CoreGui = GetService("CoreGui")
	local StarterGui = GetService("StarterGui")
	local VirtualInputManager = GetService("VirtualInputManager")
	local UserInputService = GetService("UserInputService")
	local VirtualUser = GetService("VirtualUser")
	local TeleportService = GetService("TeleportService")

	local Players = GetService("Players")
	local LocalPlayer = Players.LocalPlayer
	local PlayerGui = LocalPlayer.PlayerGui

	local Enemies = Workspace:FindFirstChild("Enemies")

	local _Quest = require(ReplicatedStorage.Quests)
	local _GuideModule = require(ReplicatedStorage.GuideModule)

	local FunctionTask = {}



	local function GetSubPrefix(G)
		G = tostring(G):gsub(" ", "")
		local E = ""
		if #G == 2 then
			local Z = string.sub(G, #G, #G + 1)
			E = Z == "1" and "st" or Z == "2" and "nd" or Z == "3" and "rd" or "th"
		end
		return E
	end

	local q = "%A, %B"
	local m = os.date(" %d", os.time())
	local s = ", %Y."
	q = os.date(q, os.time()) .. m .. GetSubPrefix() .. os.date(s, os.time())

	--------------------- [ Task: Library ] ---------------------
	
	-- "iqEhfkBz"))() -- ui pc แบบเล็ก
	-- "3pkeb0HG"))() -- ui pc
	-- "jbKSsYdC"))() -- ui pc & mobile

	local UI = "https://pastebin.com/raw/"

    local Library = loadstring(game:HttpGet(UI.."jbKSsYdC"))()
	local ThemeManager = loadstring(game:HttpGet(UI.."nPMYS622"))()
	local SaveManager = loadstring(game:HttpGet(UI.."HLsN5erC"))()

	local Window = Library:CreateWindow({
		Title = 'Fenril Hub Premium Generations | '.. tostring(q),
		Center = true, 
		AutoShow = true,
	})
	local Tabs = {
		-- Creates a new tab titled Main
		Main = Window:AddTab('General'),
		Automatics = Window:AddTab('Automatics'),
		Visuals = Window:AddTab('Visuals'),
		SettingsUi = Window:AddTab('Settings'),
	}

	--------------------- [ Task: Save ] ---------------------

	_G.Settings = {

		Main = {
			["Auto Farm Level"] = false,
			["Fast Auto Farm Level"] = false,

			--[World 1]
			["Auto New World"] = false,
			["Auto Saber"] = false,
			["Auto Pole"] = false,

			["Auto Buy Ablility"] = false,

			--[World 2]
			["Auto Third Sea"] = false,
			["Auto Bartilo Quest"] = false,

			["Auto True Triple Katana"] = false,
			["Auto Rengoku"] = false,
			["Auto Swan Glasses"] = false,
			["Auto Dark Coat"] = false,
			["Auto Ectoplasm"] = false,

			["Auto Buy Legendary Sword"] = false,
			["Auto Buy Enchanment Haki"] = false,

			--[World 3]
			["Auto Holy Torch"] = false,
			["Auto Buddys"] = false,
			["Auto Farm Boss Hallow"] = false,
			["Auto Rainbow Haki"] = false,
			["Auto Elite Hunter"] = false,
			["Auto Musketeer Hat"] = false,
			["Auto Buddy"] = false,
			["Auto Farm Soul Reaper"] = false,
			["Auto Ken-Haki V2"] = false,
			["Auto Cavander"] = false,
			["Auto Yama"] = false,
			["Auto Tushita"] = false,
			["Auto Serpent Bow"] = false,
			["Auto Dark Dagger"] = false,
			["Auto Farm Cake Prince"] = false,
			["Auto Dough V2"] = false,
			["Auto Random Bone"] = false,

			--[For God Human]

			["Auto Fish Tail Sea 1"] = false,
			["Auto Fish Tail Sea 3"] = false,
			["Auto Magma Ore Sea 2"] = false,
			["Auto Magma Ore Sea 1"] = false,
			["Auto Mystic Droplet"] = false,
			["Auto Dragon Scales"] = false,

		},
		FightingStyle = {
			["Auto God Human"] = false,
			["Auto Superhuman"] = false,
			["Auto Electric Claw"] = false,
			["Auto Death Step"] = false,
			["Auto Fully Death Step"] = false,
			["Auto SharkMan Karate"] = false,
			["Auto Fully SharkMan Karate"] = false,
			["Auto Dragon Talon"] = false,
		},
		Boss = {
			["Auto All Boss"] = false,
			["Auto Boss Select"] = false,
			["Select Boss"] = {},

			["Auto Quest"] = false,
		},
		Mastery = {
			["Select Multi Sword"] = {},
			["Farm Mastery SwordList"] = false,
			["Auto Farm Fruit Mastery"] = false,
			["Auto Farm Gun Mastery"] = false,
			["Mob Health (%)"] = 15,
		},
		Configs = {
			["Double Quest"] = false,
			["- Enabled Bypass Teleport"] = false,
			["Bypass TP"] = false,
			["Select Team"] = {"Pirate"}, --{Pirate,Marine}


			["Fast Attack"] = true,

			["Choose Weapon"] = {},


			--[Misc Configs]
			["Auto Haki"] = true,
			["Distance Auto Farm"] = 35, --{Max : 50}
			["Camera Shaker"] = false,

			--[Skill Configs]
			["Skill Z"] = true,
			["Skill X"] = true,
			["Skill C"] = true,
			["Skill V"] = true,

			--[Mob Configs]
			["Show Hitbox"] = false,
			["Bring Mob"] = true,
			["Disabled Damage"] = false,

		},
		Stat = {
			--[Auto Stats]
			["- Enabled Auto Stats"] = false,
			["Auto Stats Kaitun"] = false,
			
			["Choose Stats"] = {"Melee","Defense","Sword","Gun","Devil Fruits"},
			["Point Select"] = 3, --{Recommended , Max : 9}

			--[Auto Redeem Code]

			["Enabled Auto Redeem Code"] = false,
			["Select Level Redeem Code"] = 1, --{Max : 2400}
		},

		Misc = {
			["No Soru Cooldown"] = false,
			["No Dash Cooldown"] = false,

			["Infinities Geppo"] = false,
			["Infinities Energy"] = false,

			["No Fog"] = false,
			["Wall-TP"] = false,

			["Fly"] = false,
			["Fly Speed"] = 1,

			--[Server]
			["Auto Rejoin"] = true,
		},
		Teleport = {
			["Teleport to Sea Beast"] = false,
		},

		Fruits = {
			["Auto Buy Random Fruits"] = false,
			["Auto Store Fruits"] = false,

			["Select Devil Fruits"] = {}, -- {"Bomb-Bomb","Spike-Spike","Chop-Chop","Spring-Spring","Kilo-Kilo","Spin-Spin","Kilo-Kilo","Spin-Spin","Bird: Falcon","Smoke-Smoke","Flame-Flame","Ice-Ice","Sand-Sand","Dark-Dark","Revive-Revive","Diamond-Diamond","Light-Light","Love-Love","Rubber-Rubber","Barrier-Barrier","Magma-Magma","Door-Door","Quake-Quake","Human-Human: Buddha","String-String","Bird-Bird: Phoenix","Rumble-Rumble","Paw-Paw","Gravity-Gravity","Dough-Dough","Shadow-Shadow","Venom-Venom","Control-Control","Soul-Soul","Dragon-Dragon"}
			["Auto Buy Devil Fruits Sniper"] = false,
		},

		Raids = {
			["Auto Raids"] = false,

			["Kill Aura"] = false,
			["Auto Awakened"] = false,
			["Auto Next Place"] = false,

			["Select Raids"] = {}, -- {"Flame","Ice","Quake","Light","Dark","String","Rumble","Magma","Human: Buddha","Sand","Bird: Phoenix","Dough"},
		},

		HUD = {
			["FPS"] = 60,
			["LockFPS"] = false,
			["Boost FPS Windows"] = false,
			['White Screen'] = false,
		},
		ConfigsUI = {
			ColorUI = Color3.fromRGB(255, 0, 127), --{Color UI}
		}
	}

	local HttpService = game:GetService("HttpService")
	local playerName = LocalPlayer.Name
	local fileName = "FenrilHub_BloxFruit " .. playerName .. ".json"

	function loadcheck()
		if isfile(fileName) then
			return readfile(fileName)
		else
			local defaultSettings = HttpService:JSONEncode(_G.Save)
			writefile(fileName, defaultSettings)
			return defaultSettings
		end
	end

	function LoadSetting()
		if isfile(fileName) then
			_G.Save = HttpService:JSONDecode(readfile(fileName))
			return _G.Save
		else
			return loadcheck()
		end
	end

	function saveSettings()
		if isfile(fileName) then
			writefile(fileName, HttpService:JSONEncode(_G.Save))
			return writefile
		else
			return loadcheck()
		end
	end

	loadcheck()
	LoadSetting()


	local placeId = game.PlaceId
	if placeId == 2753915549 then
		World1 = true
	elseif placeId == 4442272183 then
		World2 = true
	elseif placeId == 7449423635 then
		World3 = true
	else
		LocalPlayer:Kick("Invalid PlaceId.") wait(3) TeleportService:Teleport(game.PlaceId, LocalPlayer)
	end

	--------------------- [ Task: Taps ] ---------------------
	local name = LocalPlayer.Name
	local Main = Tabs.Main:AddLeftTabbox()
	local Event = Tabs.Main:AddLeftTabbox()
	local Config = Tabs.Main:AddRightTabbox()
	local Settings = Tabs.Main:AddRightTabbox()

	local AutomaticsWorld1 = Tabs.Automatics:AddLeftTabbox()
	local AutomaticsWorld2 = Tabs.Automatics:AddLeftTabbox()
	local AutomaticsWorld3 = Tabs.Automatics:AddLeftTabbox()

	local Visuals = Tabs.Visuals:AddLeftTabbox()

	local Main = Main:AddTab('[ Main ]')
	local Event = Event:AddTab('[ Event ]')
	local Config = Config:AddTab('[ Config ]')
	local Settings = Settings:AddTab('[ Settings ]')

	local IsWorld1 = AutomaticsWorld1:AddTab('[ First Sea ]')
	local IsWorld2 = AutomaticsWorld2:AddTab('[ Second Sea ]')
	local IsWorld3 = AutomaticsWorld3:AddTab('[ Third Sea ]')

	local Visuals = Visuals:AddTab('[ Teleport - Island ]')

	local MenuGroup = Tabs.SettingsUi:AddLeftGroupbox('         [ Menu ]')
	local MenuConfig = Tabs.SettingsUi:AddRightGroupbox('         [ Config ]')
	local Service = Tabs.SettingsUi:AddRightGroupbox('         [ Server ]')
	-- I set NoUI so it does not show up in the keybinds menu
	MenuGroup:AddButton('Unload', function() 
		for i,_ in pairs(_G) do 
			_G[i] = false
		end 
		Library:Unload() 
	end)
	MenuGroup:AddButton('Copy JobId Server', function() 
		Library:Notify("JobId Server ... !", 2)
		wait(2)
		setclipboard(game.JobId)
		Library:Notify("Ctrl + V !", 2)
	end)
	MenuGroup:AddInput('Join_JobId_Server', { Text = 'Server JobId' })
	MenuGroup:AddButton({ Text = 'Join Server', Func = function()
		game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, Options.Join_JobId_Server.Value)
	end })

	Service:AddButton('Rejoin', function()
		Library:Notify("FENRIL HUB REJOIN COMPLETE !", 1) -- Text, Time
		warn("FENRIL HUB | REJOIN!")
		game:GetService("TeleportService"):Teleport(game.PlaceId)
	end)
	Service:AddButton('Server Hop', function()
		Library:Notify("FENRIL HUB HOP SERVER COMPLETE !", 3) -- Text, Time
		warn("FENRIL HUB |  HOP SERVER!")
		Hop()
	end)

	ThemeManager:SetLibrary(Library)
	SaveManager:SetLibrary(Library)
	SaveManager:IgnoreThemeSettings()
	ThemeManager:ApplyToTab(Tabs.SettingsUi) 

	if isfile("FenrilHub\\themes\\White.json") then
		MenuConfig:AddLabel('Status: Download 🟢')
	else
		MenuConfig:AddLabel('Status: Notdownload 🔴')
	end
	MenuConfig:AddButton('Delete Config', function()
		delfolder("FenrilHub")
	end)

	MenuGroup:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', { Default = 'RightControl', NoUI = true, Text = 'Menu keybind' }) 
	Library.ToggleKeybind = Options.MenuKeybind 
	Library:Notify("RUN BLOX FRUIT COMPLETE !", 5) -- Text, Time
	spawn(function()
		while wait() do
			pcall(function()
				local scripttime = game.Workspace.DistributedGameTime
				local seconds = scripttime%60
				local minutes = math.floor(scripttime/60%60)
				local hours = math.floor(scripttime/3600)
				Library:SetWatermarkVisibility(true)
				Library:SetWatermark("Fenril Hub Next Generations".. " | " ..minutes.." Minute(), "..math.floor(seconds).." Second()")
				--Library:SetWatermark(LocalPlayer.Name .. " | "..hours.." Hour(s), "..minutes.." Minute(s), "..math.floor(seconds).." Second(s)")
			end)
		end
	end)

	SaveManager:SetIgnoreIndexes({ 'MenuKeybind' }) 
	SaveManager:SetFolder('FenrilHub/Anime Fighters Simulator')
	SaveManager:BuildConfigSection(Tabs.SettingsUi)


	--------------------- [ Task: functions Auto Update ] ---------------------

	function format_int(number)
		local i, j, minus, int, fraction = tostring(number):find('([-]?)(%d+)([.]?%d*)')

		int = int:reverse():gsub("(%d%d%d)", "%1,")

		return minus .. int:reverse():gsub("^,", "") .. fraction
	end

	function _QuestUpdate()
		local Whitelist_Quest = {}
		local Level = LocalPlayer.Data.Level.Value

		for _, quest in pairs(_Quest) do
			for _, Quest in pairs(quest) do
				for Monster, amount in pairs(Quest.Task) do
					if Quest.LevelReq <= Level and amount ~= 1 then
						table.insert(Whitelist_Quest, Quest.LevelReq)
					end
				end
			end
		end
		for quest,v in pairs(_Quest) do
			for Numberquest, v2 in pairs(v) do
				if v2.LevelReq == math.max(unpack(Whitelist_Quest)) then
					return quest, Numberquest
				end
			end
		end
	end

	-- local _QuestUpdates, NumberQuest = _QuestUpdate()
	-- print(_QuestUpdate, NumberQuest)

	function _QuestRewardUpdate()
		local Whitelist_Quest = {}
		local Level = LocalPlayer.Data.Level.Value
		local MaxLevelReq
		local RewardBeli, RewardExp

		for _, quest in pairs(_Quest) do
			for _, Quest in pairs(quest) do
				for Monster, amount in pairs(Quest.Task) do
					if Quest.LevelReq <= Level and amount ~= 1 then
						table.insert(Whitelist_Quest, Quest.LevelReq)
					end
				end
			end
		end

		for _, Quest in pairs(_Quest) do
			for _, QuestData in pairs(Quest) do
				if QuestData.LevelReq == math.max(unpack(Whitelist_Quest)) and QuestData.Reward then
					RewardBeli, RewardExp = format_int(QuestData.Reward.Beli), format_int(QuestData.Reward.Exp)
				end
			end
		end

		return RewardBeli, RewardExp
	end

	-- local _BeliUpdate,_ExpUpdate = _QuestRewardUpdate()
	-- print(_BeliUpdate,_ExpUpdate)

	function _GetNameMon()
		local Whitelist_Quest = {}
		local Level = LocalPlayer.Data.Level.Value

		for _, quest in pairs(_Quest) do
			for _, Quest in pairs(quest) do
				for Monster, amount in pairs(Quest.Task) do
					if Quest.LevelReq <= Level and amount ~= 1 then
						table.insert(Whitelist_Quest, Quest.LevelReq)
					end
				end
			end
		end
		for _, v in pairs(_Quest) do
			for _, v2 in pairs(v) do
				if v2.LevelReq == math.max(unpack(Whitelist_Quest)) then
					for Monster, amount in pairs(v2.Task) do
						return Monster
					end
				end
			end
		end
	end

	-- local _NameMon = _GetNameMon()
	-- print(_NameMon)


	function _GetNameQuest()
		for _,v in pairs(_GuideModule.Data.NPCList) do
			if v.NPCName == _GuideModule.Data.LastClosestNPC then
				return v.Position, v.NPCName
			end
		end
	end

	-- local _PositionQuest,_QuestName = _GetNameQuest()
	-- print(_PositionQuest,_QuestName)


	--------------------- [ Task: functions ] ---------------------

	----------- [ Task: Anti AFK ] -----------

	LocalPlayer.Idled:connect(function()
		VirtualUser:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
		wait()
		VirtualUser:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
	end)

	----------- [ Task: Functions Equip Weapon ] -----------

	function EquipWeapon(Tool)
		pcall(function()
			if LocalPlayer.Backpack:FindFirstChild(Tool) then 
				local ToolHumanoid = LocalPlayer.Backpack:FindFirstChild(Tool) 
				LocalPlayer.Character.Humanoid:EquipTool(ToolHumanoid) 
			end
		end)
	end

	function EquipWeaponSword()
		pcall(function()
			for _,v in pairs(LocalPlayer.Backpack:GetChildren()) do
				if v.ToolTip == "Sword" and v:IsA('Tool') then
					local ToolHumanoid = LocalPlayer.Backpack:FindFirstChild(v.Name) 
					LocalPlayer.Character.Humanoid:EquipTool(ToolHumanoid) 
				end
			end
		end)
	end

	----------- [ Task: Body Gyro ] ----------- 

	task.spawn(function()
		RunService.Stepped:Connect(function()
			pcall(function()
				----------- [ Task: World 1 ] -----------
				
				if _G.Settings.Main["Auto Farm Level"] or _G.Settings.Main["Auto New World"] or
					_G.Settings.Main["Auto Saber"] or _G.Settings.Main["Auto Pople"] or

					----------- [ Task: World 2 ] -----------

					_G.Settings.Main["Auto Third Sea"] or _G.Settings.Main["Auto Bartilo Quest"] or _G.Settings.Main["Auto Dark Coat"] or _G.Settings.Main["Auto Swan Glasses"] or
					_G.Settings.Main["Auto True Triple Katana"] or _G.Settings.Main["Auto Rengoku"] or _G.Settings.Main["Auto Ectoplasm"]  or  _G.Settings.FightingStyle["Auto Fully Death Step"] or 
					_G.Settings.FightingStyle["Auto Fully SharkMan Karate"] or  

					----------- [ Task: World 3 ] -----------

					_G.Settings.Main["Auto Rainbow Haki"] or _G.Settings.Main["Auto Elite Hunter"] or _G.Settings.Main["Auto Musketeer Hat"] or _G.Settings.Main["Auto Buddy"] or
					_G.Settings.Main["Auto Farm Soul Reaper"] or _G.Settings.Main["Auto Ken-Haki V2"] or _G.Settings.FightingStyle["Auto God Human"] or _G.Settings.Main["Auto Cavander"] or 
					_G.Settings.Main["Auto Cursed Dual Katana"] or _G.Settings.Main["Auto Yama"] or _G.Settings.Main["Auto Tushita"] or _G.Settings.Main["Auto Serpent Bow"] or
					_G.Settings.Main["Auto Dark Dagger"] or _G.Settings.Main["Auto Farm Cake Prince"] or _G.Settings.Main["Auto Dough V2"] or _G.Settings.Main["Auto Holy Torch"] or
					_G.Settings.Main["Auto Buddys"] or _G.Settings.Main["Auto Farm Boss Hallow"] or MobAura or YamaQuest2 or YamaQuest1 or Auto_Cursed_Dual_Katana or
					Tushita_Quest2 or Tushita_Quest1 or AutoFarmMaterial or teleporttop or AutoFarmChest or

					----------- [ Task: For God Human ] -----------

					--_G.Settings.Main["Auto Fish Tail Sea 1"] or _G.Settings.Main["Auto Fish Tail Sea 3"] or _G.Settings.Main["Auto Magma Ore Sea 2"] or 
					--_G.Settings.Main["Auto Magma Ore Sea 1"] or _G.Settings.Main["Auto Mystic Droplet"] or _G.Settings.Main["Auto Dragon Scales"] or 
					----------- [ Task: Boss ] ----------- 

					_G.Settings.Boss["Auto All Boss"] or _G.Settings.Boss["Auto Boss Select"] or

					----------- [ Task: Mastery ] -----------

					_G.Settings.Mastery["Auto Farm Fruit Mastery"] or _G.Settings.Mastery["Auto Farm Gun Mastery"] or _G.Settings.Mastery["Farm Mastery SwordList"] or

					----------- [ Task: Teleport ] -----------

					_G.Settings.Teleport["Teleport to Sea Beast"] or _G.Teleport_Island or 
					
					----------- [ Task: Raids ] -----------

					_G.Settings.Raids["Auto Raids"] or _G.Settings.Raids["Auto Next Place"]

				then
					if syn then
						setfflag("HumanoidParallelRemoveNoPhysics", "False")
						setfflag("HumanoidParallelRemoveNoPhysicsNoSimulate2", "False")
						LocalPlayer.Character.Humanoid:ChangeState(11)
						if LocalPlayer.Character:WaitForChild("Humanoid").Sit == true then
							LocalPlayer.Character:WaitForChild("Humanoid").Sit = false
						end
					else
						if LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
							if not LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyVelocity1") then
								if LocalPlayer.Character:WaitForChild("Humanoid").Sit == true then
									LocalPlayer.Character:WaitForChild("Humanoid").Sit = false
								end
								local BodyVelocity = Instance.new("BodyVelocity")
								BodyVelocity.Name = "BodyVelocity1"
								BodyVelocity.Parent =  LocalPlayer.Character.HumanoidRootPart
								BodyVelocity.MaxForce = Vector3.new(10000, 10000, 10000)
								BodyVelocity.Velocity = Vector3.new(0, 0, 0)
							end
						end
						for _, v in pairs(LocalPlayer.Character:GetDescendants()) do
							if v:IsA("BasePart") then
								v.CanCollide = false    
							end
						end
					end
				else
					if LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyVelocity1") then
						LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyVelocity1"):Destroy();
					end
				end
			end)
		end)
	end)


	----------- [ Task: No Stun ] ----------- 

	if LocalPlayer.Character:FindFirstChild("Stun") then
		LocalPlayer.Character.Stun.Changed:connect(function()
			pcall(function()
				if LocalPlayer.Character:FindFirstChild("Stun") then
					LocalPlayer.Character.Stun.Value = 0
				end
			end)
		end)
	end

	----------- [ Task: Deleted Effect Auto ] -----------  

	spawn(function()
		while task.wait() do
			pcall(function()
				for _,v in pairs(Workspace["_WorldOrigin"]:GetChildren()) do
					if v.Name == ("CurvedRing") or v.Name == ("SlashHit") or v.Name == ("SwordSlash") or v.Name == ("SlashTail") or v.Name == ("Sounds") then
						v:Destroy()
					end
				end
			end)
		end
	end)

	getgenv().NoDieEffect = true 
	if getgenv().NoDieEffect then
		local ReplicatedStorageContainer = ReplicatedStorage.Effect.Container
		if ReplicatedStorageContainer:FindFirstChild("Death") then
			ReplicatedStorageContainer.Death:Destroy()
		end
		if ReplicatedStorageContainer:FindFirstChild("Respawn") then
			ReplicatedStorageContainer.Respawn:Destroy()
		end
	end

	----------- [ Task: require module] -----------  

	local CombatFramework = require(LocalPlayer.PlayerScripts:WaitForChild("CombatFramework"))
	local CombatFrameworkR = getupvalues(CombatFramework)[2]
	local RigController = require(LocalPlayer.PlayerScripts.CombatFramework.RigController)
	local RigControllerR = getupvalues(RigController)[2]
	local realbhit = require(ReplicatedStorage.CombatFramework.RigLib)
	local cooldownfastattack = tick()

	----------- [ Task: Disabled Damage Interface ] -----------  

	function DisabledDamage()
		task.spawn(function()
			local DamageCounter = ReplicatedStorage.Assets.GUI.DamageCounter
			while task.wait() do
				pcall(function()
					if _G.Settings.Configs["Disabled Damage"] then
						DamageCounter.Enabled = false
					else
						DamageCounter.Enabled = true
					end
				end)
			end
		end)
	end

	----------- [ Task: Camera Shaker Function ] -----------  

	function CameraShaker()
		task.spawn(function()
			local Camera = require(LocalPlayer.PlayerScripts.CombatFramework.CameraShaker)
			while task.wait() do
				pcall(function()
					if _G.Settings.Configs["Camera Shaker"] then
						Camera.CameraShakeInstance.CameraShakeState.Inactive = 0
					else
						Camera.CameraShakeInstance.CameraShakeState.Inactive = 3
					end
				end)
			end
		end)
	end

	----------- [ Task: Function RmFzdCBBdHRhY2s= ] -----------  

	function CurrentWeapon()
		local ac = CombatFrameworkR.activeController
		local ret = ac.blades[1]
		if not ret then 
			return LocalPlayer.Character:FindFirstChildOfClass("Tool").Name 
		end
		pcall(function()
			while ret.Parent ~= LocalPlayer.Character do 
				ret=ret.Parent 
			end
		end)
		if not ret then 
			return LocalPlayer.Character:FindFirstChildOfClass("Tool").Name 
		end
		return ret
	end

	function getAllBladeHitsPlayers(Sizes)
		local Hits = {}
		local Client = LocalPlayer
		local Characters = Workspace.Characters:GetChildren()
		for i = 1,#Characters do 
			local v = Characters[i]
			local Human = v:FindFirstChildOfClass("Humanoid")
			if v.Name ~= LocalPlayer.Name and Human and Human.RootPart and Human.Health > 0 and Client:DistanceFromCharacter(Human.RootPart.Position) < Sizes+5 then
				table.insert(Hits,Human.RootPart)
			end
		end
		return Hits
	end

	function getAllBladeHits(Sizes)
		local Hits = {}
		local Client = LocalPlayer
		local Enemies = Enemies:GetChildren()
		for i = 1,#Enemies do 
			local v = Enemies[i]
			local Human = v:FindFirstChildOfClass("Humanoid")
			if Human and Human.RootPart and Human.Health > 0 and Client:DistanceFromCharacter(Human.RootPart.Position) < Sizes+5 then
				table.insert(Hits,Human.RootPart)
			end
		end
		return Hits
	end

	function AttackFunction()
		local ac = CombatFrameworkR.activeController
		if ac and ac.equipped then
			for indexincrement = 1, 1 do
				local bladehit = getAllBladeHits(60)
				if #bladehit > 0 then
					local AcAttack8 = debug.getupvalue(ac.attack, 5)
					local AcAttack9 = debug.getupvalue(ac.attack, 6)
					local AcAttack7 = debug.getupvalue(ac.attack, 4)
					local AcAttack10 = debug.getupvalue(ac.attack, 7)
					local NumberAc12 = (AcAttack8 * 798405 + AcAttack7 * 727595) % AcAttack9
					local NumberAc13 = AcAttack7 * 798405
					(function()
						NumberAc12 = (NumberAc12 * AcAttack9 + NumberAc13) % 1099511627776
						AcAttack8 = math.floor(NumberAc12 / AcAttack9)
						AcAttack7 = NumberAc12 - AcAttack8 * AcAttack9
					end)()
					AcAttack10 = AcAttack10 + 1
					debug.setupvalue(ac.attack, 5, AcAttack8)
					debug.setupvalue(ac.attack, 6, AcAttack9)
					debug.setupvalue(ac.attack, 4, AcAttack7)
					debug.setupvalue(ac.attack, 7, AcAttack10)
					for k, v in pairs(ac.animator.anims.basic) do
						v:Play(0.01,0.01,0.01)
					end                 
					if LocalPlayer.Character:FindFirstChildOfClass("Tool") and ac.blades and ac.blades[1] then 
						ReplicatedStorage.RigControllerEvent:FireServer("weaponChange",tostring(CurrentWeapon()))
						ReplicatedStorage.Remotes.Validator:FireServer(math.floor(NumberAc12 / 1099511627776 * 16777215), AcAttack10)
						ReplicatedStorage.RigControllerEvent:FireServer("hit", bladehit, 2, "") 
					end
				end
			end
		end
	end

	----------- [ Task: Fast Attack ] -----------  
	spawn(function()
		while task.wait() do
			if FastAttack then
				pcall(function()
					local AC = CbFw2.activeController
					for i = 1,1 do 
						local bladehit = require(ReplicatedStorage.CombatFramework.RigLib).getBladeHits(plr.Character,{plr.Character.HumanoidRootPart},60)
						local cac = {}
						local hash = {}
						for k, v in pairs(bladehit) do
							if v.Parent:FindFirstChild("HumanoidRootPart") and not hash[v.Parent] then
								table.insert(cac, v.Parent.HumanoidRootPart)
								hash[v.Parent] = true
							end
						end
						bladehit = cac
						if #bladehit > 0 then
							local u8 = debug.getupvalue(AC.attack, 5)
							local u9 = debug.getupvalue(AC.attack, 6)
							local u7 = debug.getupvalue(AC.attack, 4)
							local u10 = debug.getupvalue(AC.attack, 7)
							local u12 = (u8 * 798405 + u7 * 727595) % u9
							local u13 = u7 * 798405
							(function()
								u12 = (u12 * u9 + u13) % 1099511627776
								u8 = math.floor(u12 / u9)
								u7 = u12 - u8 * u9
							end)()
							u10 = u10 + 1
							debug.setupvalue(AC.attack, 5, u8)
							debug.setupvalue(AC.attack, 6, u9)
							debug.setupvalue(AC.attack, 4, u7)
							debug.setupvalue(AC.attack, 7, u10)
							if plr.Character:FindFirstChildOfClass("Tool") and AC.blades and AC.blades[1] then 
								ReplicatedStorage.RigControllerEvent:FireServer("weaponChange",tostring(GetCurrentBlade()))
								ReplicatedStorage.Remotes.Validator:FireServer(math.floor(u12 / 1099511627776 * 16777215), u10)
								ReplicatedStorage.RigControllerEvent:FireServer("hit", bladehit, i, "") 
							end
						end
					end
				end)
			end
		end
	end)

	function AttackPlayers()
		local ac = CombatFrameworkR.activeController
		if ac and ac.equipped then
			for indexincrement = 1, 1 do
				local bladehit = getAllBladeHitsPlayers(60)
				if #bladehit > 0 then
					local AcAttack8 = debug.getupvalue(ac.attack, 5)
					local AcAttack9 = debug.getupvalue(ac.attack, 6)
					local AcAttack7 = debug.getupvalue(ac.attack, 4)
					local AcAttack10 = debug.getupvalue(ac.attack, 7)
					local NumberAc12 = (AcAttack8 * 798405 + AcAttack7 * 727595) % AcAttack9
					local NumberAc13 = AcAttack7 * 798405
					(function()
						NumberAc12 = (NumberAc12 * AcAttack9 + NumberAc13) % 1099511627776
						AcAttack8 = math.floor(NumberAc12 / AcAttack9)
						AcAttack7 = NumberAc12 - AcAttack8 * AcAttack9
					end)()
					AcAttack10 = AcAttack10 + 1
					debug.setupvalue(ac.attack, 5, AcAttack8)
					debug.setupvalue(ac.attack, 6, AcAttack9)
					debug.setupvalue(ac.attack, 4, AcAttack7)
					debug.setupvalue(ac.attack, 7, AcAttack10)
					for k, v in pairs(ac.animator.anims.basic) do
						v:Play(0.01,0.01,0.01)
					end                 
					if LocalPlayer.Character:FindFirstChildOfClass("Tool") and ac.blades and ac.blades[1] then 
						ReplicatedStorage.RigControllerEvent:FireServer("weaponChange",tostring(CurrentWeapon()))
						ReplicatedStorage.Remotes.Validator:FireServer(math.floor(NumberAc12 / 1099511627776 * 16777215), AcAttack10)
						ReplicatedStorage.RigControllerEvent:FireServer("hit", bladehit, 2, "") 
					end
				end
			end
		end
	end

	----------- [ Task: Isnetwork Owner ] -----------  

	function InMyNetWork(object)
		if isnetworkowner then
			return isnetworkowner(object)
		else
			if (object.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 200 then 
				return true
			end
			return false
		end
	end

	----------- [ Task: Function (Abandoned Quest , Others) ] ----------- 

	function Com(com,...)
		local Remote = ReplicatedStorage.Remotes:FindFirstChild("Comm"..com)
		if Remote:IsA("RemoteEvent") then
			Remote:FireServer(...)
		elseif Remote:IsA("RemoteFunction") then
			Remote:InvokeServer(...)
		end
	end

	----------- [ Task: Tween Functions ] ----------- 

	local function GetIsLand(...)
		local RealtargetPos = {...}
		local targetPos = RealtargetPos[1]
		local RealTarget
		if type(targetPos) == "vector" then
			RealTarget = targetPos
		elseif type(targetPos) == "userdata" then
			RealTarget = targetPos.Position
		elseif type(targetPos) == "number" then
			RealTarget = CFrame.new(unpack(RealtargetPos))
			RealTarget = RealTarget.p
		end

		local ReturnValue
		local CheckInOut = math.huge;
		if LocalPlayer.Team then
			for _,v in pairs(Workspace._WorldOrigin.PlayerSpawns:FindFirstChild(tostring(LocalPlayer.Team)):GetChildren()) do 
				local ReMagnitude = (RealTarget - v:GetModelCFrame().p).Magnitude;
				if ReMagnitude < CheckInOut then
					CheckInOut = ReMagnitude;
					ReturnValue = v.Name
				end
			end
			if ReturnValue then
				return ReturnValue
			end 
		end
	end

	----------- [ Task: BTP ] ----------- 

	function BTP(Position1,Position2)
		task.spawn(function()
			local Position = Position1
			if (Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude >= 2000 then
				LocalPlayer.Character:WaitForChild('HumanoidRootPart').CFrame = Position2
				LocalPlayer.Character.Humanoid.Health = 0
				ReplicatedStorage.Remotes.CommF_:InvokeServer("SetSpawnPoint")
			end
		end)
	end

	----------- [ Task: Tween Functions (toTarget) ] ----------- 

	local function toTarget(...)
		local RealtargetPos = {...}
		local targetPos = RealtargetPos[1]
		local RealTarget
		if type(targetPos) == "vector" then
			RealTarget = CFrame.new(targetPos)
		elseif type(targetPos) == "userdata" then
			RealTarget = targetPos
		elseif type(targetPos) == "number" then
			RealTarget = CFrame.new(unpack(RealtargetPos))
		end

		if LocalPlayer.Character:WaitForChild("Humanoid").Health == 0 then if tween then tween:Cancel() end repeat wait() until LocalPlayer.Character:WaitForChild("Humanoid").Health > 0; wait(0.2) end

		local tweenfunc = {}
		local Distance = (RealTarget.Position - LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position).Magnitude
		if Distance < 1000 then
			Speed = 315
		elseif Distance >= 1000 then
			Speed = 300
		end

		if _G.Settings.Configs["Bypass TP"] then
			if Distance > 3000 and not AutoFarmMaterial and not _G.Settings.FightingStyle["Auto God Human"] and not _G.Settings.Raids["Auto Raids"] and not (LocalPlayer.Backpack:FindFirstChild("Special Microchip") or LocalPlayer.Character:FindFirstChild("Special Microchip") or LocalPlayer.Backpack:FindFirstChild("God's Chalice") or LocalPlayer.Character:FindFirstChild("God's Chalice") or LocalPlayer.Backpack:FindFirstChild("Hallow Essence") or LocalPlayer.Character:FindFirstChild("Hallow Essence") or LocalPlayer.Character:FindFirstChild("Sweet Chalice") or LocalPlayer.Backpack:FindFirstChild("Sweet Chalice")) and not (Name == "Fishman Commando [Lv. 400]" or Name == "Fishman Warrior [Lv. 375]") then
				pcall(function()
					tween:Cancel()
					fkwarp = false

					if LocalPlayer.Data:FindFirstChild("SpawnPoint").Value == tostring(GetIsLand(RealTarget)) then 
						wait(.1)
						Com("F_","TeleportToSpawn")
					elseif LocalPlayer.Data:FindFirstChild("LastSpawnPoint").Value == tostring(GetIsLand(RealTarget)) then
						LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(15)
						wait(0.1)
						repeat wait() until LocalPlayer.Character:WaitForChild("Humanoid").Health > 0
					else
						if LocalPlayer.Character:WaitForChild("Humanoid").Health > 0 then
							if fkwarp == false then
								LocalPlayer.Character.HumanoidRootPart.CFrame = RealTarget
							end
							fkwarp = true
						end
						wait(.08)
						LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(15)
						repeat wait() until LocalPlayer.Character:WaitForChild("Humanoid").Health > 0
						wait(.1)
						Com("F_","SetSpawnPoint")
					end
					wait(0.2)

					return
				end)
			end
		end

		local tween_s = game:service"TweenService"
		local info = TweenInfo.new((RealTarget.Position - LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position).Magnitude/Speed, Enum.EasingStyle.Linear)
		local tweenw, err = pcall(function()
			tween = tween_s:Create(LocalPlayer.Character["HumanoidRootPart"], info, {CFrame = RealTarget})
			tween:Play()
		end)

		function tweenfunc:Stop()
			tween:Cancel()
		end 

		function tweenfunc:Wait()
			tween.Completed:Wait()
		end 

		return tweenfunc
	end

	getgenv().ToTarget = function(P1)
		task.spawn(function()
			pcall(function()
				if LocalPlayer:DistanceFromCharacter(P1.Position) <= 250 then 
					LocalPlayer.Character.HumanoidRootPart.CFrame = P1
				elseif not LocalPlayer.Character:FindFirstChild("Root")then 
					local K = Instance.new("Part",LocalPlayer.Character)
					K.Size = Vector3.new(1,0.5,1)
					K.Name = "Root"
					K.Anchored = true
					K.Transparency = 1
					K.CanCollide = false
					K.CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,20,0)
				end
				local U = (LocalPlayer.Character.HumanoidRootPart.Position - P1.Position).Magnitude
				local z = game:service("TweenService")
				local B = TweenInfo.new((P1.Position - LocalPlayer.Character.Root.Position).Magnitude/300,Enum.EasingStyle.Linear)
				local S,g = pcall(function()
				local q = z:Create(LocalPlayer.Character.Root,B,{CFrame = P1})
				q:Play()
			end)
			if not S then 
				return g
			end
			LocalPlayer.Character.Root.CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame
				if S and LocalPlayer.Character:FindFirstChild("Root") then 
					pcall(function()
						if (LocalPlayer.Character.HumanoidRootPart.Position - P1.Position).Magnitude >= 20 then 
							spawn(function()
								pcall(function()
									if (LocalPlayer.Character.Root.Position-LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 150 then 
										LocalPlayer.Character.Root.CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame
									else 
										LocalPlayer.Character.HumanoidRootPart.CFrame=LocalPlayer.Character.Root.CFrame
									end
								end)
							end)
						elseif (LocalPlayer.Character.HumanoidRootPart.Position - P1.Position).Magnitude >= 10 and(LocalPlayer.Character.HumanoidRootPart.Position - P1.Position).Magnitude < 20 then 
							LocalPlayer.Character.HumanoidRootPart.CFrame = P1
						elseif (LocalPlayer.Character.HumanoidRootPart.Position - P1.Position).Magnitude < 10 then 
							LocalPlayer.Character.HumanoidRootPart.CFrame = P1
						end
					end)
				end
			end)
		end)
	end

	function StopTween(target)
		if not target then
			_G.StopTween = true
			getgenv().ToTarget(LocalPlayer.Character.HumanoidRootPart.CFrame)
			if LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyClip") then
				LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyClip"):Destroy()
			end
			_G.StopTween = false
		end
	end

	function toTarFarm(Pos)
		Distance = (Pos.Position - LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position).Magnitude
		if LocalPlayer.Character.Humanoid.Sit == true then
			LocalPlayer.Character.Humanoid.Sit = false
		end
			
		Speed = 300

		pcall(function()
			tween = game:GetService("TweenService"):Create(
				LocalPlayer.Character.HumanoidRootPart,
				TweenInfo.new(Distance/Speed, Enum.EasingStyle.Linear),{ CFrame = Pos }
			)
			tween:Play()
		end)

		if Distance <= 160 then
			tween:Cancel()
			LocalPlayer.Character.HumanoidRootPart.CFrame = Pos
		end
		if _G.StopTween == true then
			tween:Cancel()
			_G.Clip = false
		end
	end

	function toTarTeleport(Pos)
		Distance = (Pos.Position - LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position).Magnitude
		if LocalPlayer.Character.Humanoid.Sit == true then
			LocalPlayer.Character.Humanoid.Sit = false
		end
			
		Speed = 375

		pcall(function()
			tween = game:GetService("TweenService"):Create(
				LocalPlayer.Character.HumanoidRootPart,
				TweenInfo.new(Distance/Speed, Enum.EasingStyle.Linear),{ CFrame = Pos }
			)
			tween:Play()
		end)

		if _G.Settings.Stat["- Enabled Bypass Teleport"] then
			if Distance >= 2000 then
				task.spawn(function()
					LocalPlayer.Character:WaitForChild('HumanoidRootPart').CFrame = Pos
					LocalPlayer.Character.Humanoid.Health = 0
					ReplicatedStorage.Remotes.CommF_:InvokeServer("SetSpawnPoint")
				end)
			end
		end

		if Distance <= 180 then
			tween:Cancel()
			LocalPlayer.Character.HumanoidRootPart.CFrame = Pos
		end
		if _G.StopTween == true then
			tween:Cancel()
			_G.Clip = false
		end
	end

	----------- [ Task: Infinites Energy ] ----------- 

	function InfinitiesEnergy()
		LocalPlayer.Character.Energy.Changed:connect(function()
			if _G.Settings.Misc["Infinities Energy"] then
				LocalPlayer.Character.Energy.Value = LocalPlayer.Character.Energy.MaxValue
			end 
		end)
	end

	----------- [ Task: No Cooldown , Infinities Geppo ] ----------- 

	function NoCooldown()
		for _,v in next, getgc() do
			if typeof(v) == "function" then
				if getfenv(v).script == LocalPlayer.Character:WaitForChild("Dodge") and _G.Settings.Misc["No Dash Cooldown"] then
					for i2,v2 in next, getupvalues(v) do
						if tostring(v2) == "0.4" then
							repeat wait(.1)
								setupvalue(v,i2,0)
							until not _G.Settings.Misc["No Dash Cooldown"]
						end
					end
				end
				if getfenv(v).script == LocalPlayer.Character:WaitForChild("Geppo") and _G.Settings.Misc["Infinities Geppo"] then
					for i2,v2 in next, getupvalues(v) do
						if tostring(v2) == "0" then
							repeat wait(.1)
								setupvalue(v,i2,0)
							until not _G.Settings.Misc["Infinities Geppo"]
						end
					end
				end
				if getfenv(v).script == LocalPlayer.Character:WaitForChild("Soru") and _G.Settings.Misc["No Soru Cooldown"] then
					for i2,v2 in pairs(debug.getupvalues(v)) do
						if type(v2) == 'table' then
							if v2.LastUse then
								repeat wait()
									setupvalue(v, i2, {LastAfter = 0,LastUse = 0})
								until not _G.Settings.Misc["No Soru Cooldown"]
							end
						end
					end
				end
			end
		end
	end

	----------- [ Task: Xray Function ] ----------- 

	function xray(v)
		if v then
			for _,i in pairs(workspace:GetDescendants()) do
				if i:IsA("BasePart") and not i.Parent:FindFirstChildOfClass('Humanoid') and not i.Parent.Parent:FindFirstChildOfClass('Humanoid') then
					i.LocalTransparencyModifier = 0.5
				end
			end
		else
			for _,i in pairs(workspace:GetDescendants()) do
				if i:IsA("BasePart") and not i.Parent:FindFirstChildOfClass('Humanoid') and not i.Parent.Parent:FindFirstChildOfClass('Humanoid') then
					i.LocalTransparencyModifier = 0
				end
			end
		end
	end

	----------- [ Task: Get Players Character ] ----------- 

	function getRoot(char)
		local rootPart = char:FindFirstChild('HumanoidRootPart') or char:FindFirstChild('Torso') or char:FindFirstChild('UpperTorso')
		return rootPart
	end

	function r15(plr)
		if plr.Character:FindFirstChildOfClass('Humanoid').RigType == Enum.HumanoidRigType.R15 then
			return true
		end
	end

	----------- [ Task: Functions Click ] ----------- 

	function ClickCamera()
		VirtualUser:CaptureController()
		VirtualUser:ClickButton1(Vector2.new(851, 158), Workspace.Camera.CFrame)
	end
	function Click()
		VirtualUser:CaptureController()
		VirtualUser:Button1Down(Vector2.new(1280, 672))
	end

	----------- [ Task: Remove Text Fruits ] ----------- 

	function RemoveFruit(str)
		return str:gsub(" Fruit", "")
	end

	----------- [ Task: Code Api ] ----------- 

	local CodeApi = loadstring(game:HttpGet('https://pastebin.com/raw/EK13Njf3'))()

	----------- [ Task: Comma Value ] ----------- 

	function comma_value(p1)
		local v1 = p1;
		while true do task.wait()
			local v2, v3 = string.gsub(v1, "^(-?%d+)(%d%d%d)", "%1,%2");
			v1 = v2;
			if v3 ~= 0 then else
				break;
			end;	
		end;
		return v1;
	end;

	----------- [ Task: Check Fruit 1M ] ----------- 

	_G.CheckFruitLocal1M = false
	function CheckFruit1M()
		for _,v in pairs(CommF_:InvokeServer("getInventoryFruits")) do
			if v.Price >= 1000000 then 
				_G.CheckFruitLocal1M = true
			end
		end
	end

	----------- [ Task: Get FightingStyle ] ----------- 

	function GetFightingStyle(Style)
		ReturnText = ""
		for _ ,v in pairs(LocalPlayer.Backpack:GetChildren()) do
			if v:IsA("Tool") then
				if v.ToolTip == Style then
					ReturnText = v.Name
				end
			end
		end
		for _ ,v in pairs(LocalPlayer.Character:GetChildren()) do
			if v:IsA("Tool") then
				if v.ToolTip == Style then
					ReturnText = v.Name
				end
			end
		end
		if ReturnText ~= "" then
			return ReturnText
		else
			return "Not Have"
		end
	end

	----------- [ Task: CheckMasteryWeapon ] ----------- 

	function CheckMasteryWeapon(NameWe,MasNum)
		if LocalPlayer.Backpack:FindFirstChild(NameWe) then
			if tonumber(LocalPlayer.Backpack:FindFirstChild(NameWe).Level.Value) < tonumber(MasNum) then
				return "true DownTo"
			elseif tonumber(LocalPlayer.Backpack:FindFirstChild(NameWe).Level.Value) >= tonumber(MasNum) then
				return "true UpTo"
			end
		end
		if LocalPlayer.Character:FindFirstChild(NameWe) then
			if tonumber(LocalPlayer.Character:FindFirstChild(NameWe).Level.Value) < tonumber(MasNum) then
				return "true DownTo"
			elseif tonumber(LocalPlayer.Character:FindFirstChild(NameWe).Level.Value) >= tonumber(MasNum) then
				return "true UpTo"
			end
		end
		return "else"
	end

	----------- [ Task: GetWeaponInventory ] ----------- 

	function GetWeaponInventory(Weaponname)
		for _,v in pairs(CommF_:InvokeServer("getInventory")) do
			if type(v) == "table" then
				if v.Type == "Sword" and v.Name == Weaponname then
					return true
				end
			end
		end
		return false
	end

	----------- [ Task: GetMaterial ] ----------- 

	function GetMaterial(matname)
		for _,v in pairs(CommF_:InvokeServer("getInventory")) do
			if type(v) == "table" then
				if v.Type == "Material" and v.Name == matname then
					return v.Count
				end
			end
		end
		return 0
	end

	local Material
	if World1 then
		Material = {
			"Magma Ore",
			"Leather",
			"Scrap Metal",
			"Angel Wings",
			"Fish Tail"
		}
	elseif World2 then
		Material = {
			"Magma Ore",
			"Scrap Metal",
			"Radioactive Material",
			"Vampire Fang",
			"Mystic Droplet",
		}
	elseif World3 then
		Material = {
			"Mini Tusk",
			"Fish Tail",
			"Scrap Metal",
			"Dragon Scale",
			"Conjured Cocoa",
			"Demonic Wisp",
			"Gunpowder",
		}
	end

	table.sort(Material)

	----------- [ Task: CustomFindFirstChild ] ----------- 

	local function CustomFindFirstChild(tablename)
		for i_,v in pairs(tablename) do
			if Enemies:FindFirstChild(v) then
				return true
			end
		end
		return false
	end

	----------- [ Task: IsNumber ] ----------- 

	function isNumber(str)
		if tonumber(str) ~= nil or str == 'inf' then
			return true
		end
	end

	----------- [ Task: Invisible ] ----------- 

	local function CheckRig()
		if Players.Character then
			local Humanoid = Players.Character:WaitForChild('Humanoid')
			if Humanoid.RigType == Enum.HumanoidRigType.R15 then
				return 'R15'
			else
				return 'R6'
			end
		end
	end

	local function InitiateInvis()
		local Character = Players.Character
		local StoredCF = Character.PrimaryPart.CFrame

		if CheckRig() == 'R6' then
			local Clone = Character.HumanoidRootPart:Clone()
			Character.HumanoidRootPart:Destroy()
			Clone.Parent = Character
		else
			local Clone = Character.LowerTorso.Root:Clone()
			Character.LowerTorso.Root:Destroy()
			Clone.Parent = Character.LowerTorso
		end

	end

	--------------------- [ Task: CheckMaterial ] ---------------------

	local function CheckMaterial(v1)
		if World1 then 
			if (v1 == "Magma Ore") then 
				MaterialMob = {"Military Soldier [Lv. 300]","Military Spy [Lv. 325]"};
				CFrameMon = CFrame.new( -5815,84,8820);
			elseif ((v1 == "Leather") or (v1 == "Scrap Metal")) then 
				MaterialMob = {"Brute [Lv. 45]"};
				CFrameMon = CFrame.new( -1145,15,4350);
			elseif (v1 == "Angel Wings") then 
				MaterialMob = {"God's Guard [Lv. 450]"};
				CFrameMon = CFrame.new( -4698,845, -1912);
			elseif (v1 == "Fish Tail") then 
				MaterialMob = {"Fishman Warrior [Lv. 375]","Fishman Commando [Lv. 400]"};
				CFrameMon = CFrame.new(61123,19,1569);
			end 
		end 
		if World2 then 
			if (v1 == "Magma Ore") then 
				MaterialMob = {"Magma Ninja [Lv. 1175]"};
				CFrameMon = CFrame.new( -5428,78, -5959);
			elseif (v1 == "Scrap Metal") then
				MaterialMob = {"Swan Pirate [Lv. 775]"};
				CFrameMon = CFrame.new(878,122,1235);
			elseif (v1 == "Radioactive Material") then 
				MaterialMob = {"Factory Staff [Lv. 800]"};
				CFrameMon = CFrame.new(295,73, -56);
			elseif (v1 == "Vampire Fang") then 
				MaterialMob = {"Vampire [Lv. 975]"};
				CFrameMon = CFrame.new( -6033,7, -1317);
			elseif (v1 == "Mystic Droplet") then 
				MaterialMob = {"Water Fighter [Lv. 1450]","Sea Soldier [Lv. 1425]"};
				CFrameMon = CFrame.new( -3385,239, -10542);
			end 
		end 
		if World3 then 
			if (v1 == "Mini Tusk") then 
				MaterialMob = {"Mythological Pirate [Lv. 1850]"};
				CFrameMon = CFrame.new( -13545,470, -6917);
			elseif (v1 == "Fish Tail") then 
				MaterialMob = {"Fishman Raider [Lv. 1775]","Fishman Captain [Lv. 1800]"};
				CFrameMon = CFrame.new( -10993,332, -8940);
			elseif (v1 == "Scrap Metal") then 
				MaterialMob = {"Jungle Pirate [Lv. 1900]"};
				CFrameMon = CFrame.new( -12107,332, -10549);
			elseif (v1 == "Dragon Scale") then 
				MaterialMob = {"Dragon Crew Archer [Lv. 1600]","Dragon Crew Warrior [Lv. 1575]"};
				CFrameMon = CFrame.new(6594,383,139);
			elseif (v1 == "Conjured Cocoa") then 
				MaterialMob = {"Cocoa Warrior [Lv. 2300]","Chocolate Bar Battler [Lv. 2325]","Sweet Thief [Lv. 2350]","Candy Rebel [Lv. 2375]"};
				CFrameMon = CFrame.new(620.6344604492188,78.93644714355469, -12581.369140625);
			elseif (v1 == "Demonic Wisp") then MaterialMob = {"Demonic Soul [Lv. 2025]"};
				CFrameMon = CFrame.new( -9507,172,6158);
			elseif (v1 == "Gunpowder") then MaterialMob = {"Pistol Billionaire [Lv. 1525]"};
				CFrameMon = CFrame.new( -469,74,5904);
			end 
		end 
	end

	--------------------- [ Task: function ] ---------------------
	function GetMon(Monster)
		local Enemies_Get = Enemies:GetChildren()
		local ReplicatedStorage_Get = ReplicatedStorage:GetChildren()
	
		local EnemyName = {}
	
		for _, v in pairs(Enemies_Get) do
			if table.find(Monster, v.Name) then
				table.insert(EnemyName, v)
			end
		end
	
		for _, v in pairs(ReplicatedStorage_Get) do
			if table.find(Monster, v.Name) then
				table.insert(EnemyName, v)
			end
		end
	
		return EnemyName
	end

	function GetRoot(Character)
        local RootPart = Character:FindFirstChild("HumanoidRootPart")
        return RootPart
    end
    function GetHum(Character)
        local Humanoid = Character:FindFirstChild("Humanoid")
        return Humanoid
    end
	function EquipWeaponCheck()
		if LocalPlayer.Character and not LocalPlayer.Character:FindFirstChild(_G.Settings.Configs["Choose Weapon"]) then
			wait()
			EquipWeapon(_G.Settings.Configs["Choose Weapon"])
		end
	end
	function BlackLegCheck()
		if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Black Leg") and LocalPlayer.Character:FindFirstChild("Black Leg").Level.Value >= 150 then
			VirtualInputManager:SendKeyEvent(true, "V", false, game)
			VirtualInputManager:SendKeyEvent(false, "V", false, game)
		end
	end
	function Haki()
		if LocalPlayer.Character and not LocalPlayer.Character:FindFirstChild("HasBuso") then
			Remotes.CommF_:InvokeServer("Buso")
		end
	end
	function attack()
		FastAttack = true
		Haki()
		EquipWeaponCheck()
		BlackLegCheck()
	end
	function reWeapon()
		local getweapon = {}
		for _, item in pairs(LocalPlayer.Backpack:GetChildren()) do
			table.insert(getweapon, tostring(item))
		end
		return getweapon
	end

	-- [CheckPosition Owner]

	function CheckPosition(object)
		if isnetworkowner then
			return isnetworkowner(object)
		else
			if (object.Position -Root.Position).Magnitude <= 200 then 
				return true
			end
			return false
		end
	end


	--------------------- [ Task: FunctionTask Main ] ---------------------
	_G.RedeemCode = true
	function Redeem(value)
		ReplicatedStorage.Remotes.Redeem:InvokeServer(value)
	end

	FunctionTask["AF_Level"] = function ()
		while true do task.wait()
			if Library.Unloaded then
				break
			end

			if _G.Settings.Main["Auto Farm Level"] then
				local Success, Err = pcall(function()
					--------------------- [ Task: Variable ] ---------------------				
					local _QuestUpdates, NumberQuest = _QuestUpdate()
					local _BeliUpdate, _ExpUpdate = _QuestRewardUpdate()
					local _NameMon = _GetNameMon()
					local _PositionQuest, _QuestName = _GetNameQuest()

					local Quest = PlayerGui.Main.Quest
					local GetQuestTitle = Quest.Container.QuestTitle.Title
					local QuestReward = Quest.Container.QuestReward.Title
					local EnemySpawns = workspace._WorldOrigin.EnemySpawns
					local Level = LocalPlayer.Data.Level.Value
					local PlayerPosition = LocalPlayer.Character.HumanoidRootPart.Position and LocalPlayer.Character.PrimaryPart.Position or Vector3.new(0, 0, 0)

					--------------------- [ Task: New World ] ---------------------
					if _G.Settings.Main["Auto New World"] and Level >= 700 then
						local IceDoor = Workspace.Map.Ice.Door
						if IceDoor.CanCollide == true and IceDoor.Transparency == 0 then
							ReplicatedStorage.Remotes.CommF_:InvokeServer("DressrosaQuestProgress", "Detective")
							EquipWeapon("Key")
							repeat
								wait()
								toTarFarm(CFrame.new(1347.7124, 37.3751602, -1325.6488))
							until (CFrame.new(1347.7124, 37.3751602, -1325.6488).Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 3 or not _G.Settings.Main["Auto New World"]
						elseif IceDoor.CanCollide == false and IceDoor.Transparency == 1 then
							local iceAdmiral = GetMon("Ice Admiral [Lv. 700] [Boss]")
							if iceAdmiral then
								for _, v in pairs(Enemies:GetChildren()) do
									if v.Name == "Ice Admiral [Lv. 700] [Boss]" and v.Humanoid.Health > 0 then
										repeat
											task.wait()
											v.Humanoid.JumpPower = 0
											v.Humanoid.WalkSpeed = 0
											v.HumanoidRootPart.CanCollide = false
											v.Humanoid:ChangeState(11)
											FastAttack = true
											Haki()
											toTarFarm(v.HumanoidRootPart.CFrame * CFrame.new(0, _G.Settings.Configs["Distance Auto Farm"], 0))
											EquipWeaponCheck()
											BlackLegCheck()
										until v.Humanoid.Health <= 0 or not v.Parent
										ReplicatedStorage.Remotes.CommF_:InvokeServer("TravelDressrosa")
									end
								end
							else
								toTarFarm(CFrame.new(1347.7124, 37.3751602, -1325.6488))
							end
						else
							ReplicatedStorage.Remotes.CommF_:InvokeServer("TravelDressrosa")
						end
					end

					if _G.RedeemCode == true then
						for _, v in pairs(CodeApi) do
							Redeem(v)
						end
						_G.RedeemCode = false
					end

					spawn(function()
						if not string.find(GetQuestTitle.Text, _NameMon) then
							Remotes:FindFirstChild("CommF_"):InvokeServer("AbandonQuest")
						end
					end)
					
					--------------------- [ Task: Auto Farm Level ] ---------------------
					if Level >= 15 and Level <= 74 then
						if Quest.Visible then
							Remotes:FindFirstChild("CommF_"):InvokeServer("AbandonQuest")
						end

						local TargetPosition = Vector3.new(-7894.6176757813, 5547.1416015625, -380.29119873047)
						local Distance_To_Target = (PlayerPosition - TargetPosition).Magnitude

						if Distance_To_Target <= 3000 then
							for _, v in pairs(Enemies:GetChildren()) do
								local vPosition = v.HumanoidRootPart.Position
								local PlayerDistance = (vPosition - PlayerPosition).Magnitude
								
								spawn(function()
									if v.Name == "Shanda [Lv. 475]" and PlayerDistance <= 150 then
										if GetMon("Shanda [Lv. 475]") then
											if tick() - cooldownfastattack > 0.3 then
												wait(0.7)
												cooldownfastattack = tick()
											end

											PosMon = v.HumanoidRootPart.CFrame
											v.HumanoidRootPart.CanCollide = false
											FastAttack = true
											Haki()
											toTarFarm(v.HumanoidRootPart.CFrame * CFrame.new(0, _G.Settings.Configs["Distance Auto Farm"], 0))
											print("toTarFarm")
											EquipWeaponCheck()
											BlackLegCheck()
										end
									elseif ReplicatedStorage:FindFirstChild("Shanda [Lv. 475]") then
										print("Shanda [Lv. 475]")
										toTarFarm(ReplicatedStorage:FindFirstChild("Shanda [Lv. 475]").HumanoidRootPart.CFrame * CFrame.new(0, _G.Settings.Configs["Distance Auto Farm"], 0))
									end
								end)
							end
						else
							ReplicatedStorage.Remotes.CommF_:InvokeServer("requestEntrance", Vector3.new(-7894.6176757813, 5547.1416015625, -380.29119873047))
						end
					elseif Level == 75 or Level <= 700 then 
						if Quest.Visible and string.find(QuestReward.Text, _BeliUpdate) and string.find(QuestReward.Text, _ExpUpdate) then
							for _, v in pairs(Enemies:GetChildren()) do
								if string.find(v.Name, _NameMon:sub(1, #_NameMon - 1)) then
									task.spawn(function()
										if GetMon(v.Name) and v.Humanoid.Health > 0 then
											PosMon = v.HumanoidRootPart.CFrame
											v.HumanoidRootPart.CanCollide = false
											FastAttack = true
											Haki()
											toTarFarm(v.HumanoidRootPart.CFrame * CFrame.new(0, _G.Settings.Configs["Distance Auto Farm"], 0))
											EquipWeaponCheck()
											BlackLegCheck()
										else
											for _, v in pairs(EnemySpawns:GetChildren()) do
												if string.find(v.Name, _NameMon) then
													print(v.Name)
													toTarFarm(v.HumanoidRootPart.CFrame * CFrame.new(0, _G.Settings.Configs["Distance Auto Farm"], 0))
												end
											end
										end
									end)
								end
							end
						elseif not Quest.Visible then
							task.spawn(function()
								if (PlayerPosition - _PositionQuest).Magnitude <= 250 then
									tween:Cancel()
									local remotes = Remotes:FindFirstChild("CommF_")
									if remotes then
										remotes:InvokeServer("StartQuest", _QuestUpdates, NumberQuest)
										remotes:InvokeServer("SetSpawnPoint")
									end
								else
									-- if (PlayerPosition - _PositionQuest).magnitude >= 2000 then
									-- 	BTP(CFrame.new(_PositionQuest))
									-- else
										toTarFarm(CFrame.new(_PositionQuest) * CFrame.new(0,7,0))
									-- end
								end
							end)
						end
					else
						if Quest.Visible and string.find(QuestReward.Text, _BeliUpdate) and string.find(QuestReward.Text, _ExpUpdate) then
							for _, Enemy in pairs(Enemies:GetChildren()) do
								if string.find(Enemy.Name, _NameMon:sub(1, #_NameMon - 1)) then
									task.spawn(function()
										local v = Enemy
										if v and v.Humanoid.Health > 0 then
											PosMon = v.HumanoidRootPart.CFrame
											v.HumanoidRootPart.CanCollide = false
											attack()
											toTarFarm(v.HumanoidRootPart.CFrame * CFrame.new(0, _G.Settings.Configs["Distance Auto Farm"], 0))
										else
											for _, Spawns in pairs(EnemySpawns:GetChildren()) do
												if string.find(Spawns.Name, _NameMon) then
													toTarFarm(Spawns.CFrame * CFrame.new(0, _G.Settings.Configs["Distance Auto Farm"], 0))
												end
											end
										end
									end)
								end
							end
						elseif not Quest.Visible then
							task.spawn(function()
								if (PlayerPosition - _PositionQuest).Magnitude <= 9 then
									if GetHum(LocalPlayer.Character).Health > 0 then
										tween:Cancel()
										local remotes = Remotes:FindFirstChild("CommF_")
										if remotes then
											remotes:InvokeServer("StartQuest", _QuestUpdates, NumberQuest)
											remotes:InvokeServer("SetSpawnPoint")
										end
									end
								else
									if (PlayerPosition - _PositionQuest).Magnitude >= 2000 then
										BTP(Vector3.new(_PositionQuest),CFrame.new(_PositionQuest))
									else
										toTarFarm(CFrame.new(_PositionQuest) * CFrame.new(0,7,0))
									end
								end
							end)
						end
					end
				end)
				if Err then
					warn("AF_Level", Err)
				end
			end
		end
	end
	FunctionTask["AT_Stats"] = function ()
		while true do task.wait()
			if Library.Unloaded then
				break
			end

			task.spawn(function()
				pcall(function()
					if _G.Settings.Stat["- Enabled Auto Stats"] then
						local SelectStats = _G.Settings.Stat["Choose Stats"]
						ReplicatedStorage.Remotes.CommF_:InvokeServer("AddPoint", SelectStats, 3)
					end
				end)
			end)
		end
	end

	--------- [ Task: FunctionTask World 2 ] ---------

	--------- [ Task: FunctionTask World 3 ] ---------

	-- FunctionTask["AT_Cake Prince"] = function ()
	-- 	while true do task.wait()
	-- 		if Library.Unloaded then
	-- 			break
	-- 		end
	-- 		if _G.Settings.Main["Auto Farm Cake Prince"] then
	-- 			local Success, Err = pcall(function()
	-- 				ReplicatedStorage.Remotes.CommF_:InvokeServer("CakePrinceSpawner")
	-- 				local CakePrince = ReplicatedStorage:FindFirstChild(CakePrinceBoss) or Enemies:FindFirstChild(CakePrinceBoss)
		
	-- 				if CakePrince then
	-- 					for _, v in pairs(game.Workspace.Enemies:GetChildren()) do
	-- 						if v.Name == CakePrinceBoss and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
	-- 							task.spawn(function()
	-- 								PosMon = v.HumanoidRootPart.CFrame
	-- 								v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
	-- 								v.Humanoid.JumpPower = 0
	-- 								v.Humanoid.WalkSpeed = 0
	-- 								v.HumanoidRootPart.CanCollide = false
	-- 								v.Humanoid:ChangeState(11)
	-- 								attack()
	-- 								toTarFarm(v.HumanoidRootPart.CFrame * CFrame.new(0, _G.Settings.Configs["Distance Auto Farm"], 0))
	-- 							end)
	-- 						else
	-- 							if Workspace.Map.CakeLoaf.BigMirror.Other.Transparency == 0 and (CakePrince.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 450 then
	-- 								toTarFarm(CFrame.new(-2151.82153, 149.315704, -12404.9053))
	-- 							end 
	-- 						end
	-- 					end
	-- 				else
	-- 					task.spawn(function()
	-- 						if (workspace.Map.CakeLoaf.RespawnPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 1500 then
	-- 							LocalPlayer.Character:WaitForChild('HumanoidRootPart').CFrame = CFrame.new(-2106.06812, 37.8238983, -11908.5205, 0.173624352, 0, -0.984811962, 0, 1, 0, 0.984811962, 0, 0.173624352)
	-- 							LocalPlayer.Character.Humanoid.Health = 0
	-- 							ReplicatedStorage.Remotes.CommF_:InvokeServer("SetSpawnPoint")
	-- 						end
	-- 					end)

	-- 					if Enemies:FindFirstChild("Cookie Crafter [Lv. 2200]") or Enemies:FindFirstChild("Cake Guard [Lv. 2225]") or Enemies:FindFirstChild("Baking Staff [Lv. 2250]") or Enemies:FindFirstChild("Head Baker [Lv. 2275]") then
	-- 						for _, v in pairs(Enemies:GetChildren()) do
	-- 							if (v.Name == "Cookie Crafter [Lv. 2200]" or v.Name == "Cake Guard [Lv. 2225]" or v.Name == "Baking Staff [Lv. 2250]" or v.Name == "Head Baker [Lv. 2275]") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
	-- 								task.spawn(function()
	-- 									attack()
	-- 									PosMon = v.HumanoidRootPart.CFrame
	-- 									v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
	-- 									v.Humanoid.JumpPower = 0
	-- 									v.Humanoid.WalkSpeed = 0
	-- 									v.HumanoidRootPart.CanCollide = false
	-- 									v.Humanoid:ChangeState(11)
	-- 									toTarFarm(v.HumanoidRootPart.CFrame * CFrame.new(0, _G.Settings.Configs["Distance Auto Farm"], 0))
	-- 								end)
	-- 							end
	-- 						end
	-- 					else
	-- 						toTarFarm(CFrame.new(-2077, 252, -12373))
	-- 						wait(2)
	-- 						toTarFarm(CFrame.new(-1627.6304931640625, 214.7548065185547, -12305.29296875))
	-- 						wait(2)
	-- 						toTarFarm(CFrame.new(-1849.065673828125, 137.90814208984375, -12956.365234375))
	-- 						wait(2.3)
	-- 					end

	-- 				end
	-- 			end)
	-- 			if Err then
	-- 				warn("AT_Cake Prince", Err)
	-- 			end
	-- 		end
	-- 	end
	-- end
	
	function attackEnemy(Enemy)
		task.spawn(function()
			attack()
			PosMon = Enemy.HumanoidRootPart.CFrame
			Enemy.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
			Enemy.Humanoid.JumpPower = 0
			Enemy.Humanoid.WalkSpeed = 0
			Enemy.HumanoidRootPart.CanCollide = false
			Enemy.Humanoid:ChangeState(11)
			toTarFarm(Enemy.HumanoidRootPart.CFrame * CFrame.new(0, _G.Settings.Configs["Distance Auto Farm"], 0))
		end)
	end

	FunctionTask["AT_Cake Prince"] = function ()
		while true do task.wait()
			if Library.Unloaded then
				break
			end
			if _G.Settings.Main["Auto Farm Cake Prince"] then
				local Success, Err = pcall(function()

					local EnemiesToCheck = {
						"Cookie Crafter [Lv. 2200]",
						"Cake Guard [Lv. 2225]",
						"Baking Staff [Lv. 2250]",
						"Head Baker [Lv. 2275]"
					}

					local CakePrinceBoss = "Cake Prince [Lv. 2300] [Raid Boss]"
					local CakePrince = ReplicatedStorage:FindFirstChild(CakePrinceBoss) or Enemies:FindFirstChild(CakePrinceBoss)
					ReplicatedStorage.Remotes.CommF_:InvokeServer("CakePrinceSpawner")

					if CakePrince then
						if Enemies:FindFirstChild(CakePrinceBoss) then
							attackEnemy(v)
							Bring_Mob(v,true)
						else
							if Workspace.Map.CakeLoaf.BigMirror.Other.Transparency == 0 and (CakePrince.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 450 then
								toTarTeleport(CFrame.new(-2151.82153, 149.315704, -12404.9053))
							end 
						end
					else
						task.spawn(function()
							local RespawnPart = workspace.Map.CakeLoaf.RespawnPart
							local Root = GetRoot(LocalPlayer.Character)

							if (RespawnPart.Position - Root.Position).Magnitude > 1500 then
								Root.CFrame = CFrame.new(-2106.06812, 37.8238983, -11908.5205, 0.173624352, 0, -0.984811962, 0, 1, 0, 0.984811962, 0, 0.173624352)
								LocalPlayer.Character.Humanoid.Health = 0
								ReplicatedStorage.Remotes.CommF_:InvokeServer("SetSpawnPoint")
							end
						end)
						
						local GetMon = GetMon(EnemiesToCheck)
						if #GetMon > 0 then
							local v = GetMon[1]
							if v and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
								attackEnemy(v)
								Bring_Mob(v,true)
							end
						else
							toTarTeleport(CFrame.new(-2004.6754150390625, 209.6173553466797, -12092.482421875))
						end
					end
				end)
				if Err then
					warn("AT_Cake Prince", Err)
				end
			end
		end
	end
	
	-- FunctionTask["AT_Bone"] = function ()
	-- 	while true do task.wait()
	-- 		if Library.Unloaded then
	-- 			break
	-- 		end
	-- 		if _G.Settings.Main["Auto Farm Soul Reaper"] then
	-- 			local Success, Err = pcall(function()
	-- 				if Enemies:FindFirstChild("Reborn Skeleton [Lv. 1975]") or Enemies:FindFirstChild("Living Zombie [Lv. 2000]") or Enemies:FindFirstChild("Demonic Soul [Lv. 2025]") or Enemies:FindFirstChild("Posessed Mummy [Lv. 2050]") then
	-- 					for _, v in pairs(Enemies:GetChildren()) do
	-- 						if v.Name == "Reborn Skeleton [Lv. 1975]" or v.Name == "Living Zombie [Lv. 2000]" or v.Name == "Demonic Soul [Lv. 2025]" or v.Name == "Posessed Mummy [Lv. 2050]" then
	-- 							if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
	-- 								task.spawn(function()
	-- 									PosMon = v.HumanoidRootPart.CFrame
	-- 									v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
	-- 									v.Humanoid.JumpPower = 0
	-- 									v.Humanoid.WalkSpeed = 0
	-- 									v.HumanoidRootPart.CanCollide = false
	-- 									v.Humanoid:ChangeState(11)
	-- 									attack()
	-- 									toTarFarm(v.HumanoidRootPart.CFrame * CFrame.new(0, _G.Settings.Configs["Distance Auto Farm"], 0))
	-- 								end)
	-- 							end
	-- 						end
	-- 					end
	-- 				else
	-- 					BTP(Vector3.new(-9539.0078125, 142.13059997558594, 5509.94091796875),CFrame.new(-9387.1064453125, 141.3525848388672, 5616.0419921875))
	-- 					toTarFarm(CFrame.new(-9504.8564453125, 172.14292907714844, 6057.259765625))
	-- 				end
	-- 			end)
	-- 			if Err then
	-- 				warn("AT_Bone", Err)
	-- 			end
	-- 		end
	-- 	end
	-- end
	
	FunctionTask["AT_Bone"] = function()
		while true do task.wait()
			if Library.Unloaded then
				break
			end
			if _G.Settings.Main["Auto Farm Soul Reaper"] then
				local Success, Err = pcall(function()
					local EnemiesToFind = {
						"Reborn Skeleton [Lv. 1975]",
						"Living Zombie [Lv. 2000]",
						"Demonic Soul [Lv. 2025]",
						"Posessed Mummy [Lv. 2050]"
					}
	
					local GetMon = GetMon(EnemiesToFind)
					if #GetMon > 0 then
						local v = GetMon[1]
						if v and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
							attackEnemy(v)
							Bring_Mob(v,true)
						else
							BTP(Vector3.new(-9539.0078125, 142.13059997558594, 5509.94091796875),CFrame.new(-9387.1064453125, 141.3525848388672, 5616.0419921875))
						end
					else
						toTarTeleport(CFrame.new(-9504.8564453125, 172.14292907714844, 6057.259765625))
					end

				end)
	
				if Err then
					warn("AT_Bone", Err)
				end
			end
		end
	end
	
	-- FunctionTask["AT_Tushita"] = function ()
	-- 	while true do task.wait()
	-- 		if Library.Unloaded then
	-- 			break
	-- 		end
	-- 		if _G.Settings.Main["Auto Tushita"] then
	-- 			local Success, Err = pcall(function()
	-- 				if Enemies:FindFirstChild("Longma [Lv. 2000] [Boss]") then
	-- 					for _,v in pairs(Enemies:GetChildren()) do
	-- 						if v.Name == "Longma [Lv. 2000] [Boss]" and v.Humanoid.Health > 0 and v:IsA("Model") and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") then
	-- 							task.spawn(function()
	-- 								PosMon = v.HumanoidRootPart.CFrame
	-- 								v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
	-- 								v.Humanoid.JumpPower = 0
	-- 								v.Humanoid.WalkSpeed = 0
	-- 								v.HumanoidRootPart.CanCollide = false
	-- 								v.Humanoid:ChangeState(11)
	-- 								attack()
	-- 								toTarFarm(v.HumanoidRootPart.CFrame * CFrame.new(0, _G.Settings.Configs["Distance Auto Farm"], 0))
	-- 							end)
	-- 						end
	-- 					end
	-- 				else
	-- 					toTarTeleport(CFrame.new(-10238.875976563, 389.7912902832, -9549.7939453125))
	-- 				end
	-- 			end)
	-- 			if Err then
	-- 				warn("AT_Bone", Err)
	-- 			end
	-- 		end
	-- 	end
	-- end
	-- FunctionTask["AT_Buddy"] = function ()
	-- 	while true do task.wait()
	-- 		if Library.Unloaded then
	-- 			break
	-- 		end
	-- 		if _G.Settings.Main["Auto Buddy"] then
	-- 			local Success, Err = pcall(function()
	-- 				if Enemies:FindFirstChild("Cake Queen [Lv. 2175] [Boss]") then
	-- 					for _,v in pairs(Enemies:GetChildren()) do
	-- 						if v.Name == "Cake Queen [Lv. 2175] [Boss]" and v:FindFirstChild("Humanoid").Health > 0 and v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") then
	-- 							task.spawn(function()
	-- 								PosMon = v.HumanoidRootPart.CFrame
	-- 								v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
	-- 								v.Humanoid.JumpPower = 0
	-- 								v.Humanoid.WalkSpeed = 0
	-- 								v.HumanoidRootPart.CanCollide = false
	-- 								v.Humanoid:ChangeState(11)
	-- 								attack()
	-- 								toTarFarm(v.HumanoidRootPart.CFrame * CFrame.new(0, _G.Settings.Configs["Distance Auto Farm"], 0))
	-- 							end)
	-- 						end
	-- 					end
	-- 				else
	-- 					toTarTeleport(CFrame.new(5283.609375, 22.56223487854, -110.78285217285))
	-- 				end
	-- 			end)
	-- 			if Err then
	-- 				warn("AT_Bone", Err)
	-- 			end
	-- 		end
	-- 	end
	-- end
	-- FunctionTask["AT_Cavander"] = function ()
	-- 	while true do task.wait()
	-- 		if Library.Unloaded then
	-- 			break
	-- 		end
	-- 		if _G.Settings.Main["Auto Cavander"] then
	-- 			local Success, Err = pcall(function()
	-- 				if Enemies:FindFirstChild("Beautiful Pirate [Lv. 1950] [Boss]") then
	-- 					for _,v in pairs(Enemies:GetChildren()) do
	-- 						if v.Name == ("Beautiful Pirate [Lv. 1950] [Boss]") and v:FindFirstChild("Humanoid").Health > 0 and v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") then
	-- 							task.spawn(function()
	-- 								PosMon = v.HumanoidRootPart.CFrame
	-- 								v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
	-- 								v.Humanoid.JumpPower = 0
	-- 								v.Humanoid.WalkSpeed = 0
	-- 								v.HumanoidRootPart.CanCollide = false
	-- 								v.Humanoid:ChangeState(11)
	-- 								attack()
	-- 								toTarFarm(v.HumanoidRootPart.CFrame * CFrame.new(0, _G.Settings.Configs["Distance Auto Farm"], 0))
	-- 							end)
	-- 						end
	-- 					end
	-- 				else
	-- 					toTarTeleport(CFrame.new(5283.609375, 22.56223487854, -110.78285217285))
	-- 				end
	-- 			end)
	-- 			if Err then
	-- 				warn("AT_Bone", Err)
	-- 			end
	-- 		end
	-- 	end
	-- end
	-- FunctionTask["AT_Dark Dagger"] = function ()
	-- 	while true do task.wait()
	-- 		if Library.Unloaded then
	-- 			break
	-- 		end
	-- 		if _G.Settings.Main["Auto Dark Dagger"] then
	-- 			local Success, Err = pcall(function()
	-- 				if Enemies:FindFirstChild("rip_indra True Form [Lv. 5000] [Raid Boss]") then
	-- 					for _,v in pairs(Enemies:GetChildren()) do
	-- 						if v.Name == "rip_indra True Form [Lv. 5000] [Raid Boss]" and v:FindFirstChild("Humanoid").Health > 0 and v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") then
	-- 							task.spawn(function()
	-- 								PosMon = v.HumanoidRootPart.CFrame
	-- 								v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
	-- 								v.Humanoid.JumpPower = 0
	-- 								v.Humanoid.WalkSpeed = 0
	-- 								v.HumanoidRootPart.CanCollide = false
	-- 								v.Humanoid:ChangeState(11)
	-- 								attack()
	-- 								toTarFarm(v.HumanoidRootPart.CFrame * CFrame.new(0, _G.Settings.Configs["Distance Auto Farm"], 0))
	-- 							end)
	-- 						end
	-- 					end
	-- 				else
	-- 					toTarTeleport(CFrame.new(-5344.822265625, 423.98541259766, -2725.0930175781))
	-- 				end
	-- 			end)
	-- 			if Err then
	-- 				warn("AT_Bone", Err)
	-- 			end
	-- 		end
	-- 	end
	-- end
	-- FunctionTask["AT_Serpent Bow"] = function ()
	-- 	while true do task.wait()
	-- 		if Library.Unloaded then
	-- 			break
	-- 		end
	-- 		if _G.Settings.Main["Auto Serpent Bow"] then
	-- 			local Success, Err = pcall(function()
	-- 				if Enemies:FindFirstChild("Island Empress [Lv. 1675] [Boss]") then
	-- 					for _,v in pairs(Enemies:GetChildren()) do
	-- 						if v.Name == "Island Empress [Lv. 1675] [Boss]" and v:FindFirstChild("Humanoid").Health > 0 and v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") then
	-- 							task.spawn(function()
	-- 								PosMon = v.HumanoidRootPart.CFrame
	-- 								v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
	-- 								v.Humanoid.JumpPower = 0
	-- 								v.Humanoid.WalkSpeed = 0
	-- 								v.HumanoidRootPart.CanCollide = false
	-- 								v.Humanoid:ChangeState(11)
	-- 								attack()
	-- 								toTarFarm(v.HumanoidRootPart.CFrame * CFrame.new(0, _G.Settings.Configs["Distance Auto Farm"], 0))
	-- 							end)
	-- 						end
	-- 					end
	-- 				else
	-- 					toTarTeleport(CFrame.new(5543.86328125, 668.97399902344, 199.0341796875))
	-- 				end
	-- 			end)
	-- 			if Err then
	-- 				warn("AT_Bone", Err)
	-- 			end
	-- 		end
	-- 	end
	-- end

	local function AutoSwordWorld3(Visible,BossName, CFrame)
		while true do task.wait()
			if Library.Unloaded then
				break
			end
			if _G.Settings.Main[Visible] then
				local Success, Err = pcall(function()
					local Boss = Enemies:FindFirstChild(BossName)
					if Boss then
						for _, Enemie in pairs(Enemies:GetChildren()) do
							if Enemie.Name == BossName and v:FindFirstChild("Humanoid").Health > 0 and Enemie:IsA("Model") and Enemie:FindFirstChild("HumanoidRootPart") then
								task.spawn(function()
									PosMon = Enemie.HumanoidRootPart.CFrame
									Enemie.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
									Enemie.Humanoid.JumpPower = 0
									Enemie.Humanoid.WalkSpeed = 0
									Enemie.HumanoidRootPart.CanCollide = false
									Enemie.Humanoid:ChangeState(11)
									attack()
									toTarFarm(Enemie.HumanoidRootPart.CFrame * CFrame.new(0, _G.Settings.Configs["Distance Auto Farm"], 0))
								end)
							end
						end
					else
						toTarTeleport(CFrame)
					end
				end)
				if Err then
					warn("AT_Bone", Err)
				end
			end
		end
	end

	FunctionTask["AT_Tushita"] = function ()
		AutoSwordWorld3("Auto Tushita", "Longma [Lv. 2000] [Boss]", CFrame.new(-10238.875976563, 389.7912902832, -9549.7939453125))
	end

	FunctionTask["AT_Buddy"] = function ()
		AutoSwordWorld3("Auto Buddy", "Cake Queen [Lv. 2175] [Boss]", CFrame.new(5283.609375, 22.56223487854, -110.78285217285))
	end

	FunctionTask["AT_Cavander"] = function ()
		AutoSwordWorld3("Auto Cavander", "Beautiful Pirate [Lv. 1950] [Boss]", CFrame.new(5283.609375, 22.56223487854, -110.78285217285))
	end

	FunctionTask["AT_Dark Dagger"] = function ()
		AutoSwordWorld3("Auto Dark Dagger", "rip_indra True Form [Lv. 5000] [Raid Boss]", CFrame.new(-5344.822265625, 423.98541259766, -2725.0930175781))
	end

	FunctionTask["AT_Serpent Bow"] = function ()
		AutoSwordWorld3("Auto Serpent Bow", "Island Empress [Lv. 1675] [Boss]", CFrame.new(5543.86328125, 668.97399902344, 199.0341796875))
	end



	--------------------- [ Task: Bring Mob ] ---------------------

	function Bring(v)
		print("Bring")
		v.HumanoidRootPart.CFrame = PosMon
		v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
		v.Humanoid.JumpPower = 0
		v.Humanoid.WalkSpeed = 0
		v.HumanoidRootPart.CanCollide = false
		v.Head.CanCollide = false
		if v.Humanoid:FindFirstChild("Animator") then
			v.Humanoid.Animator:Destroy()
		end
		v.Humanoid:ChangeState(11)
	end

	function Bring_Mob(_Enemy, Input)
		task.spawn(function()
			local _NameMon = _GetNameMon()

			-- pcall(function()
				if setscriptable then
					setscriptable(LocalPlayer, "SimulationRadius", true)
				end
				if sethiddenproperty then
					sethiddenproperty(LocalPlayer, "SimulationRadius", math.huge)
				end
				for _, v in pairs(Enemies:GetChildren()) do
					if Input then
						if not string.find(_Enemy.Name, "Boss") and FastAttack and (_Enemy.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 250 then
							print(1)
							if InMyNetWork(_Enemy.HumanoidRootPart) then
								print(2)
								Bring(_Enemy)
							end
						end
					else
						if _G.Settings.Main["Auto Farm Level"] and string.find(v.Name, _NameMon) and (v.HumanoidRootPart.Position - PosMon.Position).magnitude <= 250 and (v.HumanoidRootPart.Position - PosMon.Position).magnitude >= 20 then
							if InMyNetWork(v.HumanoidRootPart) then
								Bring(v)
							end
						end
					end
				end
			-- end)
		end)
	end


	--------------------- [ Task: No-Clip ] ---------------------

	function HandleCharacter(settings)
		local function RemoveCollisions(character)
			for _, v in pairs(character:GetDescendants()) do
				if v:IsA("BasePart") and v.CanCollide then
					v.CanCollide = false
				end
			end
		end
		
		local Humanoid = GetHum(LocalPlayer.Character)
		local Root = GetRoot(LocalPlayer.Character)

		task.spawn(function()
			while task.wait() do
				if _G[settings] and Humanoid and Humanoid.Health > 0 then
					if setfflag then
						setfflag("HumanoidParallelRemoveNoPhysics", "False")
						setfflag("HumanoidParallelRemoveNoPhysicsNoSimulate2", "False")
						Humanoid:ChangeState(11)
					else
						if not Root:FindFirstChild("KRNLONAIR") then
							local KRNLONAIR = Instance.new("BodyVelocity")
							KRNLONAIR.Parent = Root
							KRNLONAIR.Name = "KRNLONAIR"
							KRNLONAIR.MaxForce = Vector3.new(100000, 100000, 100000)
							KRNLONAIR.Velocity = Vector3.new(0, 0, 0)
						end
						RemoveCollisions(Character)
					end
				else
					Humanoid:ChangeState(8)
					if Root and Root:FindFirstChild("KRNLONAIR") then
							Root:FindFirstChild("KRNLONAIR"):Destroy()
					end
				end
			end
		end)
	end
	HandleCharacter("Auto Farm Level")
	HandleCharacter("Auto Farm Cake Prince")
	HandleCharacter("Auto Farm Soul Reaper")

	---------------------- [ Task: Fast Attack ]  ----------------------

	coroutine.wrap(function()
		while task.wait() do
			local ac = CombatFrameworkR.activeController
			if ac and ac.equipped then
				task.wait()
				if FastAttack and _G.Settings.Configs["Fast Attack"] then
					AttackFunction()
					if tick() - cooldownfastattack > 1.2 then 
						cooldownfastattack = tick() 
					end
				end
			end
		end
	end)()

	--------------------- [ Task: Run FunctionTask ] ---------------------

	for TaskName, Task in pairs(FunctionTask) do
		-- 	coroutine.wrap(Task)()
		task.spawn(Task)
	end
		
	---------------------- [ Task: Added Toggles ]  ----------------------

	local items = {
		{Name = 'Auto Farm Level', Default = _G.Settings.Main["Auto Farm Level"],Tooltip = 'Auto Farm Level'},
		{Name = 'Auto New World', Default = _G.Settings.Configs["Auto New World"],Tooltip = 'Auto New World'},
		--{Name = 'Auto Farm Level', Default = _G.Save.Main["Auto Farm Level"],Tooltip = 'Auto Farm Level'},
	}
	for _, item in pairs(items) do
		Main:AddToggle(item.Name, {Text = item.Name, Default = item.Default, Tooltip = item.Tooltip,})
		Toggles[item.Name]:OnChanged(function(value)
			_G[item.Name] = value
			_G.Settings.Main[item.Name] = value
			saveSettings()
			if not value then
				toTarTeleport(LocalPlayer.Character.HumanoidRootPart.CFrame)
			end
		end)
	end

	local EventS = {
		{Name = 'Auto Farm Cake Prince', Default = _G.Settings.Main["Auto Farm Cake Prince"],Tooltip = 'Auto Farm Cake Prince'},
		{Name = 'Auto Farm Soul Reaper', Default = _G.Settings.Main["Auto Farm Soul Reaper"],Tooltip = 'Auto Farm Soul Reaper'},
	} 

	for _, Eventx in pairs(EventS) do
		Event:AddToggle(Eventx.Name, {Text = Eventx.Name, Default = Eventx.Default, Tooltip = Eventx.Tooltip,})
		Toggles[Eventx.Name]:OnChanged(function(value)
			_G[Eventx.Name] = value
			_G.Settings.Main[Eventx.Name] = value 
			saveSettings()
			if not value then
				toTarTeleport(LocalPlayer.Character.HumanoidRootPart.CFrame)
			end
		end)
	end

	local ConfigS = {
		{Name = '- Enabled Auto Stats', Default = _G.Settings.Stat["- Enabled Auto Stats"],Tooltip = '- Enabled Auto Stats'},
		{Name = '- Enabled Bypass Teleport', Default = _G.Settings.Stat["- Enabled Bypass Teleport"],Tooltip = '- Enabled Bypass Teleport'},
	}
	for _, Configs in pairs(ConfigS) do
		Config:AddToggle(Configs.Name, {Text = Configs.Name, Default = Configs.Default, Tooltip = Config.Tooltip,})
		Toggles[Configs.Name]:OnChanged(function(value)
			_G.Settings.Stat[Configs.Name] = value 
			saveSettings()
		end)
	end

	local IsWorld3S = {
		{Name = 'Auto Yama', Default = _G.Settings.Main["Auto Yama"], Tooltip = 'Auto Yama',},
		{Name = 'Auto Tushita', Default = _G.Settings.Main["Auto Tushita"], Tooltip = 'Auto Tushita'},
		{Name = 'Auto Buddy', Default = _G.Settings.Main["Auto Buddy"], Tooltip = 'Auto Buddy'},
		{Name = 'Auto Cavander', Default = _G.Settings.Main["Auto Cavander"], Tooltip = 'Auto Cavander'},
		{Name = 'Auto Dark Dagger', Default = _G.Settings.Main["Auto Dark Dagger"], Tooltip = 'Auto Dark Dagger'},
		{Name = 'Auto Serpent Bow', Default = _G.Settings.Main["Auto Serpent Bow"], Tooltip = 'Auto Serpent Bow'},
	} 

	for _, IsWorld3x in pairs(IsWorld3S) do
		IsWorld3:AddToggle(IsWorld3x.Name, {Text = IsWorld3x.Name, Default = IsWorld3x.Default, Tooltip = IsWorld3x.Tooltip,})
		Toggles[IsWorld3x.Name]:OnChanged(function(value)
			_G[IsWorld3x.Name] = value
			_G.Settings.Main[IsWorld3x.Name] = value 
			saveSettings()
		end)
	end

	---------------------- [ Task: Added Dropdowns ]  ----------------------

	local function CreateDropdownSetting(optionName, saveKey, defaultIndex, values, tooltip)
	Settings:AddDropdown(optionName, {Values = values,Default = defaultIndex,Text = optionName,Tooltip = tooltip,})
		
		Options[optionName]:OnChanged(function(value)
			_G.Settings.Configs[saveKey] = value
			saveSettings()
		end)
	end

	local function CreateDropdownStat(optionName, saveKey, defaultIndex, values, tooltip)
	Config:AddDropdown(optionName, {Values = values,Default = defaultIndex,Text = optionName,Tooltip = tooltip,})
		
		Options[optionName]:OnChanged(function(value)
			_G.Settings.Stat[saveKey] = value
			saveSettings()
		end)
	end

	---------------------- [ Task: Selected Weapon ]  ----------------------

	CreateDropdownSetting('Choose Weapon:', 'Choose Weapon', _G.Settings.Configs["Choose Weapon"], reWeapon(), 'Choose Weapon')

	Settings:AddButton('Refresh Weapon', function()
		Options["Choose Weapon:"].Values = reWeapon()
		Options["Choose Weapon:"]:SetValue(nil)
	end)


	---------------------- [ Task: Selected Weapon ]  ----------------------
	
	CreateDropdownStat('Choose Stats:', 'Choose Stats', _G.Settings.Stat["Choose Stats"], {"Melee","Defense","Sword","Gun","Devil Fruits"}, 'Select Stats')

	Options["Choose Stats:"]:SetValue("Melee")


	---------------------- [ Task: Select Distance ]  ----------------------

	Settings:AddSlider('SelectDistance', {Text = 'Method Distance',Default = _G.Settings.Configs["Distance Auto Farm"],Min = 0,Max = 60,Rounding = 1,Compact = false,})

	local Number = Options.SelectDistance.Value
	Options.SelectDistance:OnChanged(function(Value)
		_G.Settings.Configs["Distance Auto Farm"] = Value
		saveSettings()
	end)
	Options.SelectDistance:SetValue(_G.Settings.Configs["Distance Auto Farm"])





	---------------------- [ Task: Teleport - Island ]  ----------------------

	TeleportTable = {}

	if World1 then
		TeleportTable = {
			"Jones Salad",
			"Marine1",
			"Marine2",
			"Midle Town",
			"Jungle",
			"Pirate Village",
			"Desert",
			"Frozen Village",
			"Colosseum",
			"Prison",
			"Mob Leader",
			"Magma Village",
			"UnderWater Gate",
			"UnderWater City",
			"Fountain City",
			"Sky1",
			"Sky2",
			"Sky3"
		}
	elseif World2 then
		TeleportTable = {
			"Dock",
			"Mansion",
			"Kingdom Of Rose",
			"Cafe","Sunflower Field",
			"Jeramy Mountain",
			"Colossuem","Factory",
			"The Bridge","Green Bit",
			"Graveyard",
			"Dark Area",
			"Snow Mountain",
			"Hot Island",
			"Cold Island",
			"Ice Castle",
			"Usopp's Island",
			"inscription Island",
			"Forgotten Island",
			"Ghost Ship"
		}
	elseif World3 then
		TeleportTable = {
			"CandyCane",
			"Chocolate",
			"Loaf",
			"IceCream",
			"Peanut",
			"HauntedCastle",
			"GreatTree",
			"Hydra",
			"PineappleTown",
			"SeaCastle",
			"BigMansion",
			"Default",
		}
	end

	Visuals:AddToggle('Teleport Island', {Text = 'Teleport Island',Default = false,Tooltip = 'Teleport Island',})
	Toggles['Teleport Island']:OnChanged(function(value)
		_G.Teleport_Island = value

		if _G.Teleport_Island then
			repeat
				task.wait()

				--------- [ Task: Island World 1 ] ---------


				--------- [ Task: Island World 2 ] ---------


				--------- [ Task: Island World 3 ] ---------
				if _G.Choose_Island == "CandyCane" then
					toTarTeleport(CFrame.new(-1048.146484375, 14.821257591247559, -14185.88671875))
				elseif _G.Choose_Island == "Chocolate" then
					toTarTeleport(CFrame.new(98.76901245117188, 24.760244369506836, -12062.5634765625))
				elseif _G.Choose_Island == "Loaf" then
					toTarTeleport(CFrame.new(-1970.1824951171875, 37.82395935058594, -11916.6728515625))
				elseif _G.Choose_Island == "IceCream" then
					toTarTeleport(CFrame.new(-828.9332275390625, 65.84529876708984, -10941.90625))
				elseif _G.Choose_Island == "IceCream" then
					toTarTeleport(CFrame.new(-2091.974853515625, 38.129390716552734, -10297.0302734375))
				elseif _G.Choose_Island == "Peanut" then
					toTarTeleport(CFrame.new(-2091.974853515625, 38.129390716552734, -10297.0302734375))
				elseif _G.Choose_Island == "HauntedCastle" then
					toTarTeleport(CFrame.new(-9554.4052734375, 142.13059997558594, 5459.541015625))
				elseif _G.Choose_Island == "GreatTree" then
					toTarTeleport(CFrame.new(2364.62060546875, 32.11551284790039, -6553.599609375))
				elseif _G.Choose_Island == "Hydra" then
					toTarTeleport(CFrame.new(5119.68505859375, 601.6090698242188, 248.43930053710938))
				elseif _G.Choose_Island == "PineappleTown" then
					toTarTeleport(CFrame.new(-11352.4384765625, 331.7489929199219, -10369.31640625))
				elseif _G.Choose_Island == "SeaCastle" then
					toTarTeleport(CFrame.new(-4999.52880859375, 314.5412902832031, -3010.72607421875))
				elseif _G.Choose_Island == "BigMansion" then
					toTarTeleport(CFrame.new(-12550.123046875, 341.78143310546875, -7470.36328125))
				elseif _G.Choose_Island == "Default" then
					toTarTeleport(CFrame.new(-292.0928039550781, 6.755728244781494, 5358.30126953125))
				end
			until not _G.Teleport_Island
		end
	end)

	HandleCharacter("Teleport_Island")

	Visuals:AddDropdown('Choose Island', {Values = TeleportTable,Default = 1, Multi = false, Text = 'Choose Island:',Tooltip = 'Choose Island:',})
	Options['Choose Island']:OnChanged(function(value)
		_G.Choose_Island = value
	end)

end
FenrilHub_BloxFruit:RUN()
