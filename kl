getgenv().Webhook = "https://discord.com/api/webhooks/1127302542754324490/PDXsfG04o_qYXtA0eqhFSz_NsfG03CZcmteJVZDl_o2WzL5mTRxj_t5hXWJR3gumdYI-"
local FenrilHub_KingLegacyKaitun = {}
function FenrilHub_KingLegacyKaitun:RUN()
    repeat task.wait() warn("FENRIL HUB KING LEGACY KAITUN MODE LOADED ... !") until game:IsLoaded() 
    local placeId = game.PlaceId
    if placeId == 4520749081 then
        First = true elseif placeId == 6381829480 then Second = true elseif placeId == 5931540094 then Raid = true elseif placeId == 6596144663 then Awakeworld = true 
    else
        LocalPlayer:Kick("Invalid PlaceId.") wait(3) game:GetService("TeleportService"):Teleport(game.PlaceId, LocalPlayer)
    end

    -- if game:IsLoaded() then
	-- 	local UserInputService = game:GetService("UserInputService")
	-- 	local TweenService = game:GetService("TweenService")
	-- 	local LocalPlayer = game:GetService("Players").LocalPlayer
		
	-- 	local UILibrary = Instance.new("ScreenGui")
	-- 	local Load = Instance.new("Frame")
	-- 	local LoadButton = Instance.new("ImageButton")
		
	-- 	UILibrary.Name = "UILibrary"
	-- 	UILibrary.Parent = game:GetService("CoreGui")
	-- 	UILibrary.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
		
	-- 	Load.Name = "Load"
	-- 	Load.Parent = UILibrary
	-- 	Load.Active = true
	-- 	Load.AnchorPoint = Vector2.new(0.5, 0.5)
	-- 	Load.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
	-- 	Load.BackgroundTransparency = 1
	-- 	Load.BorderSizePixel = 0
	-- 	Load.BackgroundTransparency = 1
		
	-- 	local uitoggled = false
	-- 	UserInputService.InputBegan:Connect(function(io, p)
	-- 		if io.KeyCode == Enum.KeyCode.RightControl then
	-- 			if uitoggled == false then
	-- 				uitoggled = true
	-- 				UILibrary.Enabled = false
	-- 			else
	-- 				UILibrary.Enabled = true
	-- 				uitoggled = false
	-- 			end
	-- 		end
	-- 	end)
		
	-- 	local Blur = Instance.new("BlurEffect")
		
	-- 	Blur.Size = 0
	-- 	Blur.Parent = game.Lighting
		
	-- 	if game.Workspace.Camera.FieldOfView == 50 then
	-- 		return game.Workspace.Camera.FieldOfView == 70
	-- 	end
		
	-- 	local LoadText = Instance.new("Frame")
	-- 	local UIListLayoutLoadText = Instance.new("UIListLayout")
	-- 	local TitleLoad = Instance.new("TextLabel")
		
	-- 	LoadText.Name = "LoadText"
	-- 	LoadText.Parent = Load
	-- 	LoadText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	-- 	LoadText.BackgroundTransparency = 1.000
	-- 	LoadText.Size = UDim2.new(0, 500, 0, 50)
	-- 	LoadText.ClipsDescendants = true
		
	-- 	UIListLayoutLoadText.Name = "UIListLayoutLoadText"
	-- 	UIListLayoutLoadText.Parent = LoadText
	-- 	UIListLayoutLoadText.FillDirection = Enum.FillDirection.Horizontal
	-- 	UIListLayoutLoadText.HorizontalAlignment = Enum.HorizontalAlignment.Center
	-- 	UIListLayoutLoadText.SortOrder = Enum.SortOrder.LayoutOrder
		
	-- 	function LoadFunction()
	-- 		print("Starts Scripr Premium.")
	-- 		TweenService:Create(game.Workspace.Camera,TweenInfo.new(.4, Enum.EasingStyle.Back, Enum.EasingDirection.InOut),{FieldOfView = 50}):Play()
		
	-- 		TweenService:Create(Blur,TweenInfo.new(.4, Enum.EasingStyle.Back, Enum.EasingDirection.InOut),{Size = 20}):Play()
		
	-- 		TweenService:Create(Load,TweenInfo.new(.4, Enum.EasingStyle.Back, Enum.EasingDirection.InOut),{Position = UDim2.new(0.5, 0, 0.5, 0)}):Play()
		
	-- 		TweenService:Create(Load,TweenInfo.new(.4, Enum.EasingStyle.Quart, Enum.EasingDirection.In),{BackgroundTransparency = 0}):Play()
		
	-- 		wait(.5)
	-- 		TweenService:Create(LoadButton,TweenInfo.new(.4, Enum.EasingStyle.Quart, Enum.EasingDirection.In),{ImageTransparency = 0}):Play()
		
	-- 		LoadButton.MouseEnter:Connect(function()
	-- 			TweenService:Create(LoadButton,TweenInfo.new(.2, Enum.EasingStyle.Back, Enum.EasingDirection.InOut),{Size = UDim2.new(0, 80, 0, 80)}):Play()
	-- 		end)
		
	-- 		LoadButton.MouseLeave:Connect(function()
	-- 			TweenService:Create(LoadButton,TweenInfo.new(.2, Enum.EasingStyle.Back, Enum.EasingDirection.InOut),{Size = UDim2.new(0, 70, 0, 70)}):Play()
	-- 		end)
		
	-- 		local LoadFocus = false
	-- 		print("Loading Interface .. !")
	-- 		if LoadFocus == false then
	-- 			LoadFocus = true
	-- 			TweenService:Create(LoadButton,TweenInfo.new(.2, Enum.EasingStyle.Back, Enum.EasingDirection.InOut),{Rotation = 180}):Play()
	-- 			TweenService:Create(LoadButton,TweenInfo.new(.4, Enum.EasingStyle.Quart, Enum.EasingDirection.In),{ImageTransparency = 1}):Play()
	-- 			wait(.5)
	-- 			LoadButton:Destroy()
		
	-- 			local Alphes = loadstring(game:HttpGet('https://alphes.net/Files/Notifier.lua'))()
	-- 			Alphes:Notifier("SCRIPT KING LEGACY KAITUN MODE LOADED COMPLETE . . . ! ",2) wait(2.3)
	-- 			Alphes:Notifier("DEVELOPER : KAITO KUNG",2)
		
	-- 			wait(2)
	-- 			TweenService:Create(Load,TweenInfo.new(.4, Enum.EasingStyle.Back, Enum.EasingDirection.InOut),{Position = UDim2.new(0.5, 0, 0.025, 0)}):Play()
	-- 			TweenService:Create(Blur,TweenInfo.new(.4, Enum.EasingStyle.Back, Enum.EasingDirection.InOut),{Size = 0}):Play()
	-- 			TweenService:Create(game.Workspace.Camera,TweenInfo.new(.4, Enum.EasingStyle.Back, Enum.EasingDirection.InOut),{FieldOfView = 70}):Play()
	-- 		end
	-- 	end
	-- 	LoadFunction()
	-- end

    -- Variable


    local GetService = function(serviceName) return game:GetService(serviceName) end
    local Players = GetService("Players")
    local RunService = GetService("RunService")
    local UserInputService = GetService("UserInputService")
    local CoreGui = GetService("CoreGui")
    local StarterGui = GetService("StarterGui")
    local ReplicatedStorage = GetService("ReplicatedStorage")
    local VirtualInputManager = GetService("VirtualInputManager")
    local UserInputService = GetService("UserInputService")
    local VirtualUser = GetService("VirtualUser")
    local gameStats = GetService('Stats')
    local TeleportService = GetService("TeleportService")

    local LocalPlayer = Players.LocalPlayer
    local Character = LocalPlayer.Character
    local PlayerStats = LocalPlayer.PlayerStats
    local PlayerGui = LocalPlayer.PlayerGui
    local Mouse = LocalPlayer:GetMouse()
    local Camera = workspace.CurrentCamera

    local Remotes = ReplicatedStorage:WaitForChild("Remotes")
    local Functions = Remotes:WaitForChild("Functions")
    local Events = Remotes:WaitForChild("Events")

    local DeleteEffect = ReplicatedStorage.Chest
    local MOB = ReplicatedStorage:WaitForChild("MOB")

    local Modules = ReplicatedStorage:WaitForChild("Modules")
    local QuestManager = require(Modules.QuestManager)

    local CD_Attack = 0
    local FunctionTask = {}

    -- Functions
    local function GetToolFromTip(Tip)
        local ToolBackpack = LocalPlayer.Backpack:FindFirstChildWhichIsA("Tool", true)

        if ToolBackpack and ToolBackpack.ToolTip == Tip then
            return toolInBackpack
        end

        if Character then
            local ToolCharacter = Character:FindFirstChildWhichIsA("Tool", true)
            if ToolCharacter and ToolCharacter.ToolTip == Tip then
                return toolInCharacter
            end
        end
    end
    local function equip(ToolName)
        local backpack = LocalPlayer.Backpack
        local tool = backpack:FindFirstChild(ToolName)
        if tool then
            wait()
            LocalPlayer.Character.Humanoid:EquipTool(tool)
        elseif GetToolFromTip(ToolName) then
            LocalPlayer.Character.Humanoid:EquipTool(GetToolFromTip(ToolName))
        end
    end
    function equip(v)
        pcall(function()
            if LocalPlayer.Backpack:FindFirstChild(v) then 
                local Tool = LocalPlayer.Backpack:FindFirstChild(v) 
                LocalPlayer.Character.Humanoid:EquipTool(Tool) 
            end
        end)
    end
    local function Hop()
        local PlaceID = game.PlaceId
        local AllIDs, foundAnything, actualHour = {}, "", os.date("!*t").hour

        function TPReturner()
            local function GetServerList(cursor)
                return game.HttpService:JSONDecode(game:HttpGet(string.format('https://games.roblox.com/v1/games/%s/servers/Public?sortOrder=Asc&limit=100%s', PlaceID, cursor and '&cursor=' .. cursor or '')))
            end
            
            local Site = GetServerList(foundAnything)
            if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
                foundAnything = Site.nextPageCursor
            end
            
            for i, v in pairs(Site.data) do
                local ID = tostring(v.id)
                if tonumber(v.maxPlayers) > tonumber(v.playing) then
                    local Possible = true
                    for _, Existing in pairs(AllIDs) do
                        if tonumber(actualHour) ~= tonumber(Existing) then
                            AllIDs = {}
                            table.insert(AllIDs, actualHour)
                        elseif ID == tostring(Existing) then
                            Possible = false
                        end
                    end
                    if Possible then
                        table.insert(AllIDs, ID)
                        wait()
                        pcall(function()
                            wait()
                            TeleportService:TeleportToPlaceInstance(PlaceID, ID, LocalPlayer)
                        end)
                        wait(4)
                    end
                end
            end
        end

        function Teleport() 
            while wait() do
                pcall(function()
                    TPReturner()
                    if foundAnything ~= "" then
                        TPReturner()
                    end
                end)
            end
        end

        Teleport()
    end
    local function getTool(toolName)
        for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
            if tool:IsA("Tool") and string.find(tool.ToolTip, toolName) then
                return tool.Name
            end
        end

        for _, tool in pairs(LocalPlayer.Character:GetChildren()) do
            if tool:IsA("Tool") and string.find(tool.ToolTip, toolName) then
                return tool.Name
            end
        end

        return nil
    end
    local function getcombattool()
        return getTool("Combat")
    end
    local function getswordtool()
        return getTool("Sword")
    end
	local function Thread_Skills()
		local inputs = {
			{key = 122, value = _G.SK_Z},
			{key = 120, value = _G.SK_X},
			{key = 99, value = _G.SK_C},
			{key = 118, value = _G.SK_V}
		}

		pcall(function()
			for _, input in ipairs(inputs) do
                input.value = true
				if input.value then
					VirtualInputManager:SendKeyEvent(true, input.key, false, game)
					VirtualInputManager:SendKeyEvent(false, input.key, false, game)
				end
			end
		end)
	end
    local function GetSubPrefix(G)
        G = tostring(G):gsub(" ", "")
        local E = ""
        if #G == 2 then
            local Z = string.sub(G, #G, #G + 1)
            E = Z == "1" and "st" or Z == "2" and "nd" or Z == "3" and "rd" or "th"
        end
        return E
    end


    local q = "%A, %B"
    local m = os.date(" %d", os.time())
    local s = ", %Y."
    q = os.date(q, os.time()) .. m .. GetSubPrefix() .. os.date(s, os.time())

    local function HS()
        local Http = game:GetService("HttpService")
        local TPS = game:GetService("TeleportService")
        local Api = "https://games.roblox.com/v1/games/"

        local placeId = game.PlaceId
        local serversUrl = Api .. placeId .. "/servers/Public?sortOrder=Asc&limit=100"

        function ListServers(cursor)
            local raw = game:HttpGet(serversUrl .. (cursor and "&cursor=" .. cursor or ""))
            return Http:JSONDecode(raw)
        end

        local Server, Next
        repeat
            local servers = ListServers(Next)
            Server = servers.data[1]
            Next = servers.nextPageCursor
        until Server

        TPS:TeleportToPlaceInstance(placeId, Server.id, LocalPlayer)
    end

    local body = tostring(math.random(0, 100000))
    local TweenFloatVelocity = Vector3.new(0, 0, 0)

    local function CreateF()
        local BV = LocalPlayer.Character.HumanoidRootPart:FindFirstChild(body) or Instance.new("BodyVelocity")
        BV.Parent = LocalPlayer.Character.HumanoidRootPart
        BV.Name = body
        BV.MaxForce = Vector3.new(100000, 100000, 100000)
        BV.Velocity = TweenFloatVelocity
    end
    local Float = false

    ------------- [ Task: Anti_AFK ] -------------- 
    LocalPlayer.Idled:connect(function()
        VirtualUser:Button2Down(Vector2.new(1, 0), workspace.CurrentCamera.CFrame)
        task.wait(1)
        VirtualUser:Button2Up(Vector2.new(1, 0), workspace.CurrentCamera.CFrame)
    end)

    ------------------------------------- [ Functions ] -------------------------------------

    function GetQuestData()
        local Data = {}
        local Whitelist_Quest = {}
        local Level = PlayerStats.lvl.Value
        for i,v in pairs(QuestManager) do
            if v.Level <= Level and i:find("Kill") and not v.DailyQuest then
                table.insert(Whitelist_Quest,v.Level)
            end
        end
        for i,v in pairs(QuestManager) do
            if v.Level == math.max(unpack(Whitelist_Quest)) and i:find("Kill") and not v.DailyQuest then
                Data = {
                    Entity = v.Mob,
                    Quest = "QuestLvl"..v.Level,
                    QuestData = i,
                    IsBoss = v.Ammount == 1,
                }
            end
        end
        return Data
    end
    function IsQuest(Data)
        if Data == nil then
            return LocalPlayer.CurrentQuest.Value
        end
        return LocalPlayer.CurrentQuest.Value == Data
    end
    function GetNPC(_Name_)
        return Workspace.AllNPC:FindFirstChild(_Name_)
    end
    function GetRoot(Character)
        local RootPart = Character:FindFirstChild("HumanoidRootPart")
        return RootPart
    end
    function GetHum(Character)
        local Humanoid = Character:FindFirstChild("Humanoid")
        return Humanoid
    end
    function Teleport(_CFrame_, UseMethod)
        local RootPart = GetRoot(LocalPlayer.Character)

        if UseMethod then
            if _G.Save["ModeFarm"] == "Above" then
                RootPart.CFrame = _CFrame_ * CFrame.new(0, _G.Save["Select_Distance"], 0) * CFrame.Angles(math.rad(-90), 0, 0)
            elseif _G.Save["ModeFarm"] == "Behind" then
                RootPart.CFrame = _CFrame_ * CFrame.new(0, -_G.Save["Select_Distance"], 0) * CFrame.Angles(math.rad(90), 0, 0)
            elseif _G.Save["ModeFarm"] == "Back" then
                RootPart.CFrame = _CFrame_ * CFrame.new(0, 0, _G.Save["Select_Distance"])        
            end
        else
            RootPart.CFrame = _CFrame_
        end
    end
    function GetSelfDistance(_Postition)
        local RootPart = GetRoot(LocalPlayer.Character)
        return (RootPart.Position - _Postition).Magnitude
    end
    function EquipWeapon(_Weapon)
        local Weapon = LocalPlayer.Backpack:FindFirstChild(_Weapon)
        if Weapon then
            LocalPlayer.Character.Humanoid:EquipTool(Weapon)
        end
    end
    function TalkNPC(PATH)
        return Functions.CheckQuest:InvokeServer(PATH)    
    end
    function IsDialog(_DIALOG)
        return LocalPlayer.PlayerGui:FindFirstChild(_DIALOG)
    end
    function attack()
        EquipWeapon(_G.Save["Select_Weapon"])
        Thread_Skills()
        local Combat = getcombattool()
        local Weapon = LocalPlayer.Character:FindFirstChildOfClass("Tool")
        if Weapon then
            local Current_Type = (Weapon.ToolTip == "Sword" and "SW_") or (Weapon.ToolTip == "Combat" and "FS_")
            if tick() >= CD_Attack then
                CD_Attack = tick() + 0.1
                spawn(function()
                    Functions.SkillAction:InvokeServer("FS_"..Combat.."_M1")
                    Functions.SkillAction:InvokeServer(Current_Type..Weapon.Name.."_M1")
                end)
            end
        end
    end

    function FireDialog(_DIALOG,_Type)
        local Button
        local Is_Dialog = IsDialog(_DIALOG)
        if Is_Dialog then
            Button = Is_Dialog.Dialogue[_Type]
            VirtualInputManager:SendMouseButtonEvent(Button.AbsolutePosition.X + 115, Button.AbsolutePosition.Y + 50, 0, not UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1), game, 1)
        end
    end
    function QuestAccept(_Quest_UI)
        local Quest_UI = _Quest_UI
        wait(1)
        local AcceptButton = PlayerGui:FindFirstChild(Quest_UI):FindFirstChild("Dialogue"):WaitForChild("Accept")
        AcceptButton.ImageTransparency = 1
        AcceptButton.BackgroundTransparency = 1
        AcceptButton.Size = UDim2.new(0, 10000000, 0, 10000000)
        AcceptButton.Position = UDim2.new(-2, 0, -10, 0)
        wait()
        VirtualUser:Button1Down(Vector2.new(500, 500))
        VirtualUser:Button1Up(Vector2.new(500, 500))
        wait()
    end
    function GetEntity(_ENTITY)
        getrenv()._G.RenderDist1 = 100000000000
        local Entity = Workspace.Monster.Boss:FindFirstChild(_ENTITY) or Workspace.Monster.Mon:FindFirstChild(_ENTITY)
        if Entity then
            for _, v in pairs(Entity.Parent:GetChildren()) do
                if v.Name == _ENTITY and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                    return v
                end
            end
        end
        return nil
    end
    function redeemCode(code)
        local remote = ReplicatedStorage.Remotes.Functions:WaitForChild("redeemcode")
        remote:InvokeServer(code)
    end
    function reWeapon()
        local getweapon = {}
        local swordList = require(ReplicatedStorage.Modules.SwordList)
        local backpackChildren = LocalPlayer.Backpack:GetChildren()
        local characterChildren = LocalPlayer.Character:GetChildren()
    
        for moduleName, weapon in pairs(swordList) do
            for _, itemContainer in pairs({backpackChildren, characterChildren}) do
                for _, item in pairs(itemContainer) do
                    if string.find(moduleName, tostring(item)) then
                        table.insert(getweapon, tostring(item))
                    end
                end
            end
        end
    
        return getweapon
    end
    function BuyItem(npcName, itemName, beliThreshold, teleportCFrame)
        if not LocalPlayer.Inventory:FindFirstChild(itemName) and PlayerStats.beli.Value >= beliThreshold then
            local npc = GetNPC(npcName)
            if npc then
                Teleport(teleportCFrame)
                TalkNPC(npc)
                --FireDialog(npcName, "Accept")
                QuestAccept(npcName)
                LocalPlayer.Health = 0
                Options.SelectedWeapon.Values = reWeapon()
                Options.SelectedWeapon:SetValue(getswordtool())
            end
        end
    end
    function DeleteParticleEmitters(descendants)
        for _, v in pairs(descendants) do
            if v:IsA("ParticleEmitter") then
                v:Destroy()
            end
        end
    end
    function CheckLegacy()
        for i = 1, 5 do 
            if Workspace.Island:FindFirstChild("Legacy Island"..i) then 
                return i
            end 
        end
    end
    function SeaKing()
        local SeaMonster = Workspace:WaitForChild("SeaMonster")
        local island = Workspace.Island:FindFirstChild("Legacy Island" .. CheckLegacy())
        local ChestSpawner = island and island:FindFirstChild("ChestSpawner")
        
        CheckLegacy()

        for _,v in pairs(SeaMonster:GetDescendants()) do
            pcall(function()
                if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v:FindFirstChild("Humanoid").Health > 0 and v:IsA("Model") then
                    repeat
                        task.wait()
                        Teleport(v:FindFirstChild("HumanoidRootPart").CFrame, true)
                        attack()
                    until not _G.Save["- Enabled Kaitun"] or not v:FindFirstChild("Humanoid") or v:FindFirstChild("Humanoid").Health <= 0
                else
                    Teleport(ChestSpawner.CFrame * CFrame.new(0, 3, 3))
                end
            end)
        end
    end
    function HydraSeaKing()
        local SeaMonster = Workspace:WaitForChild("SeaMonster")
        local hydraSeaKing = SeaMonster:FindFirstChild("HydraSeaKing")
        local Position = game:GetService("Workspace").Island["Sea King Thunder"].SeaBeastChest.RootPart.CFrame
        
        if hydraSeaKing and hydraSeaKing:IsA("Model") and hydraSeaKing:FindFirstChild("Humanoid") and hydraSeaKing.Humanoid.Health > 0 then
            repeat
                task.wait()
                Teleport(hydraSeaKing.HumanoidRootPart.CFrame, true)
                attack()
            until hydraSeaKing.Humanoid.Health <= 0 or not _G.Save["- Enabled Kaitun"]
        else
            Teleport(Position)
        end
    end
    function GhostShip()
        local GhostMonster = workspace:WaitForChild("GhostMonster")
        local v = GhostMonster:FindFirstChild("Ghost Ship")

        if v and v:FindFirstChild("Humanoid") then
            if v.Humanoid.Health > 0 then
                repeat
                    task.wait()
                    Teleport(v.HumanoidRootPart.CFrame, true)
                    attack()
                    sethiddenproperty(LocalPlayer, "SimulationRadius", math.huge)
                    Teleport(v:FindFirstChild("HumanoidRootPart").CFrame * CFrame.new(0, 15, 0) * CFrame.Angles(math.rad(-90), 0, 0))
                    v.Humanoid.Health = 0
                    v.HumanoidRootPart.CanCollide = true
                    v.HumanoidRootPart.Size = Vector3.new(25, 25, 25)
                    v.HumanoidRootPart.Transparency = 1
                until v:FindFirstChild("Humanoid").Health <= 0 or not _G.Save["- Enabled Kaitun"]
            else
                for i = 1, 4 do
                    Teleport(game:GetService("Workspace")["Chest" .. i].RootPart.CFrame * CFrame.new(0, 2, 0))
                end
            end
        elseif GetChest() then
            for i = 1, 4 do
                Teleport(game:GetService("Workspace")["Chest" .. i].RootPart.CFrame * CFrame.new(0, 2, 0))
            end
        end
    end

    function Get_SpawnStatus(__Spawned)
        return __Spawned and '✅' or '🔴'
        -- return __Spawned and "True" or "False"
    end

    


    local UI = "https://pastebin.com/raw/"
    
    -- local Library = loadstring(game:HttpGet(UI.."iqEhfkBz"))() -- ui pc แบบเล็ก
    -- local Library = loadstring(game:HttpGet(UI.."3pkeb0HG"))() -- ui pc
    -- local Library = loadstring(game:HttpGet(UI.."jbKSsYdC"))() -- ui pc & mobile
    local Library = loadstring(game:HttpGet(UI.."iqEhfkBz"))()
	local ThemeManager = loadstring(game:HttpGet(UI.."nPMYS622"))()
	local SaveManager = loadstring(game:HttpGet(UI.."HLsN5erC"))()

    local Window = Library:CreateWindow({
        -- Set Center to true if you want the menu to appear in the center
        -- Set AutoShow to true if you want the menu to appear when it is created
        -- Position and Size are also valid options here
        -- but you do not need to define them unless you are changing them :)

        Title = 'Fenril Hub [Kaitun Mode - Next Generations]',--.. tostring(q),
        Center = true, 
        AutoShow = true,
    })
    local Tabs = {
        -- Creates a new tab titled Main
        Main = Window:AddTab('General'),
        SettingsUi = Window:AddTab('Settings'),
    }

    -- Settings

    _G.Save = {
        ["- Enabled Kaitun"] = true;
        ["Select_Distance"] = 9.5;
        ["ModeFarm"] = "Above";
        ["Select_Weapon"] = getswordtool();
    }
    local HttpService = game:GetService("HttpService")
    local playerName = LocalPlayer.Name
    local fileName = "FenrilHub_KingLegacy " .. playerName .. ".json"

    function loadcheck()
        if isfile(fileName) then
            return readfile(fileName)
        else
            local defaultSettings = HttpService:JSONEncode(_G.Save)
            writefile(fileName, defaultSettings)
            return defaultSettings
        end
    end

    function LoadSetting()
        if isfile(fileName) then
            _G.Save = HttpService:JSONDecode(readfile(fileName))
            return _G.Save
        else
            return loadcheck()
        end
    end

    function saveSettings()
        if isfile(fileName) then
            writefile(fileName, HttpService:JSONEncode(_G.Save))
            return writefile
        else
            return loadcheck()
        end
    end

    loadcheck()
    LoadSetting()

    -- Settings

    ---[box]
    local name = LocalPlayer.Name
    local Stats = Tabs.Main:AddLeftTabbox()
    local Main = Tabs.Main:AddLeftTabbox()
    local Settings = Tabs.Main:AddLeftTabbox()
    local Check = Tabs.Main:AddRightTabbox()
    local webhooks = Tabs.Main:AddLeftTabbox()


    ---[Section]
    local Stats = Stats:AddTab('[ Information ]')
    local MainSection = Main:AddTab('[ Main ]')
    local Settings = Settings:AddTab('[ Settings ]')
    local Check = Check:AddTab('[ Check Inventory Player ]')
    local webhook = webhooks:AddTab('[ Webhook ]')


    local MenuGroup = Tabs.SettingsUi:AddLeftGroupbox('      [ Menu ]')
    local MenuConfig = Tabs.SettingsUi:AddRightGroupbox('      [ Config ]')
    local Service = Tabs.SettingsUi:AddRightGroupbox('      [ Server ]')
    -- I set NoUI so it does not show up in the keybinds menu
    MenuGroup:AddButton('Unload', function() 
        Library:Unload() 
    end)
    MenuGroup:AddButton('Copy JobId Server', function() 
        Library:Notify("JobId Server ... !", 2)
        wait(2)
        setclipboard(game.JobId)
        Library:Notify("Ctrl + V !", 2)
    end)
    MenuGroup:AddInput('Join_JobId_Server', { Text = 'Server JobId' })
    MenuGroup:AddButton({ Text = 'Join Server', Func = function()
        game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, Options.Join_JobId_Server.Value)
    end })

    Service:AddButton('Rejoin', function()
        Library:Notify("FENRIL HUB REJOIN COMPLETE !", 1) -- Text, Time
        warn("FENRIL HUB | REJOIN!")
        game:GetService("TeleportService"):Teleport(game.PlaceId)
    end)
    Service:AddButton('Server Hop', function()
        Library:Notify("FENRIL HUB HOP SERVER COMPLETE !", 3) -- Text, Time
        warn("FENRIL HUB |  HOP SERVER!")
        Hop()
    end)

    ThemeManager:SetLibrary(Library)
    SaveManager:SetLibrary(Library)
    SaveManager:IgnoreThemeSettings()
    ThemeManager:ApplyToTab(Tabs.SettingsUi) 

    if isfile("FenrilHub\\themes\\White.json") then
        MenuConfig:AddLabel('Status: Download 🟢')
    else
        MenuConfig:AddLabel('Status: Notdownload 🔴')
    end
    MenuConfig:AddButton('Delete Config', function()
        delfolder("FenrilHub")
    end)

    MenuGroup:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', { Default = 'RightControl', NoUI = true, Text = 'Menu keybind' }) 
    Library.ToggleKeybind = Options.MenuKeybind 
    Library:Notify("RUN KING LEGACY KAITUN COMPLETE !", 5) -- Text, Time
    spawn(function()
        while wait() do
            pcall(function()
                local scripttime = game.Workspace.DistributedGameTime
                local seconds = scripttime%60
                local minutes = math.floor(scripttime/60%60)
                local hours = math.floor(scripttime/3600)
                Library:SetWatermarkVisibility(true)
                Library:SetWatermark("Fenril Hub Premium Generations".. " | " ..minutes.." Minute(), "..math.floor(seconds).." Second()")
                --Library:SetWatermark(LocalPlayer.Name .. " | "..hours.." Hour(s), "..minutes.." Minute(s), "..math.floor(seconds).." Second(s)")
            end)
        end
    end)

    SaveManager:SetIgnoreIndexes({ 'MenuKeybind' }) 
    SaveManager:SetFolder('FenrilHub/Anime Fighters Simulator')
    SaveManager:BuildConfigSection(Tabs.SettingsUi)

    ------------------------------------- [ Togget ] -------------------------------------
    FENRILHUB = Stats:AddLabel('Welcome To: FenrilHub Kub!')
    OWNER = Stats:AddLabel('Owner: Kalto Kung#1517')
    Partner = Stats:AddLabel('Partner: Deity Hub & itmoodz')
    Name = Stats:AddLabel('Name: '..LocalPlayer.Name)
    Gem = Stats:AddLabel('')
    FpsandPing = Stats:AddLabel('')
    World = Stats:AddLabel(''..game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name)
    task.spawn(function()
        while true do task.wait()
            pcall(function()
                Gem:SetText('Gem: '..PlayerStats.Gem.Value)
                --FpsandPing:SetText('Fps: '..string.format("%d", Workspace:GetRealPhysicsFPS()) '| Ping: '..math.floor(gameStats.Network.ServerStatsItem['Data Ping']:GetValue()))
            end)
        end
    end)

    local items = {
        {Name = '- Enabled Kaitun', Default = _G.Save["- Enabled Kaitun"],Tooltip = '- Enabled Kaitun'},
    }
    for _, item in pairs(items) do
        MainSection:AddToggle(item.Name, {Text = item.Name, Default = item.Default, Tooltip = item.Tooltip,})
        Toggles[item.Name]:OnChanged(function(value)
            _G[item.Name] = value 
            _G.Save[item.Name] = value 
            saveSettings()
        end)
    end
    
    ---------------------------------------- [ Settings ] ----------------------------------------  

    ---------------------- [ Task: Auto Rejoin Server ]  ----------------------
    spawn(function()
        while wait() do
            local listener
            listener = game:GetService("CoreGui").RobloxPromptGui.promptOverlay.ChildAdded:Connect(function(child)
                if child.Name == 'ErrorPrompt' and child:FindFirstChild('MessageArea') and child.MessageArea:FindFirstChild("ErrorFrame") then
                    warn("Fenril Hub | Rejoin!")
                    game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId)
                end
            end)
            wait()
            listener:Disconnect()
        end
    end)

    ---------------------- [ Task: Auto Haki ]  ----------------------
    local isAutoHakiEnabled = true

    local function ResetHaki()
        local localPlayer = LocalPlayer
        local character = localPlayer.Character
        local humanoid = character and character:FindFirstChild("Humanoid")

        if humanoid and humanoid.Health > 0 then
            local hakiValue = character and character:FindFirstChild("Haki") and character.Haki.Value

            if hakiValue == 2 then
                character.Haki.Value = 0
                if character.Services and character.Services.Client then
                    character.Services.Client.Armament:FireServer(false)
                end
            end
        end
    end
    local function AutoHaki()
        Settings:AddToggle('AutoHaki', {Text = 'Buso & Ken Haki [Unlock]', Default = true, Tooltip = 'Buso & Ken Haki [Unlock]'})

        Toggles.AutoHaki:OnChanged(function(value)
            isAutoHakiEnabled = value

            -- If AutoHaki is disabled, reset Haki immediately
            if not isAutoHakiEnabled then
                ResetHaki()
            end
        end)

        -- Continuously check for AutoHaki state and activate Haki if enabled
        spawn(function()
            while true do
                wait(1.2)
                local localPlayer = LocalPlayer
                local character = localPlayer.Character
                local humanoid = character and character:FindFirstChild("Humanoid")

                if isAutoHakiEnabled and humanoid and humanoid.Health > 0 then
                    local hakiValue = character and character:FindFirstChild("Haki") and character.Haki.Value

                    -- If Haki is not activated, enable it
                    if hakiValue == 0 then
                        character.Haki.Value = 2
                        if character.Services and character.Services.Client then
                            character.Services.Client.Armament:FireServer()
                            character.Services.Client.KenEvent:InvokeServer(true)
                        end
                    end
                else
                    -- If AutoHaki is disabled or player is dead, reset Haki
                    ResetHaki()
                end
            end
        end)
    end
    AutoHaki()

    ---------------------- [ Task: Selected Weapon ]  ----------------------

    local function CreateDropdownSetting(optionName, saveKey, defaultIndex, values, tooltip)
        Settings:AddDropdown(optionName, {
            Values = values,
            Default = defaultIndex,
            Text = optionName,
            Tooltip = tooltip,
        })
        
        Options[optionName]:OnChanged(function(value)
            _G.Save[saveKey] = value
            saveSettings()
        end)
    end

    -- Task: Method
    CreateDropdownSetting('Method', 'ModeFarm', _G.Save["ModeFarm"], {'Back', 'Behind', 'Above'}, 'Choose Method')

    -- Task: Choose Weapon
    CreateDropdownSetting('SelectedWeapon', 'Select_Weapon', 1, reWeapon(), 'Choose Weapon')

    Options.SelectedWeapon:SetValue(getswordtool())
    local RefreshWeapon = Settings:AddButton('Refresh Weapon', function()
        Options.SelectedWeapon.Values = reWeapon()
        Options.SelectedWeapon:SetValue(getswordtool())
    end)

    ---------------------- [ Task: Select Distance ]  ----------------------
    Settings:AddSlider('SelectDistance', {Text = 'Method Distance',Default = _G.Save["Select_Distance"],Min = 6,Max = 15,Rounding = 1,Compact = false,})

    local Number = Options.SelectDistance.Value
    Options.SelectDistance:OnChanged(function(Value)
        _G.Save["Select_Distance"] = Value
        saveSettings()
    end)
    Options.SelectDistance:SetValue(_G.Save["Select_Distance"])



    ---------------------- [ Task: Check Item Player ]  ----------------------
    local toolItems = {
        "Tashi Blade",
        "Barbaric Axe",
        "Shark Blade",
        "Pole",
        "Mini Mace",
        "Saber",
        "Bisento",
        "Demon Trident",
        "Hell Sword",
        "Muramasa",
        "Adventure Knife",
        "Sunken Blade",
        "Pondere Blade",
        "Authentic Triple Katana",
    
    }
    local Success, Err = pcall(function()
        local tabletoolItems = {}
        for _, toolItem in pairs(toolItems) do
            tabletoolItems[toolItem] = Check:AddLabel(toolItem ..": ".. Get_SpawnStatus(LocalPlayer.Inventory:FindFirstChild(toolItem)))
        end
        spawn(function()
            while task.wait(2) do
                for _, toolItem in pairs(toolItems) do
                    tabletoolItems[toolItem]:SetText(toolItem ..": ".. Get_SpawnStatus(LocalPlayer.Inventory:FindFirstChild(toolItem)))
                end
            end
        end)
    end)
    if Err then
        print(Err)
    end

    ---------------------- [ Task: Check Raids Player ]  ----------------------
    if Second and not First and not Raid and not Awakeworld then
        local Raids = Tabs.Main:AddRightTabbox()
        local Raid = Raids:AddTab('[ Check Raids Secound ]')

        local SeaMonster = Workspace:WaitForChild("SeaMonster")
        local GhostMonster = Workspace:WaitForChild("GhostMonster")

        
        local Raids = {
            {Name = "SeaKing",Entity = SeaMonster:FindFirstChild("SeaKing"),},
            {Name = "HydraSeaKing",Entity = SeaMonster:FindFirstChild("HydraSeaKing"),},
            {Name = "Ghost Ship",Entity = GhostMonster:FindFirstChild("Ghost Ship"),},
        }

        local tableRaids = {}
        for _, raidInfo in pairs(Raids) do
            local RaidName = raidInfo.Name
            local RaidEntity = raidInfo.Entity
            
            tableRaids[raidInfo] = Raid:AddLabel(RaidName .. ": " .. Get_SpawnStatus(RaidEntity))
        end
        
        spawn(function()
            while task.wait(2) do
                for _, raidInfo in pairs(Raids) do
                    local RaidName = raidInfo.Name
                    local RaidEntity = raidInfo.Entity
                    
                    tableRaids[raidInfo]:SetText(RaidName .. ": " .. Get_SpawnStatus(RaidEntity))
                end
            end
        end)
    end
    
    ---------------------- [ Task: Fps Game Boost ]  ----------------------
    local fpscap = Tabs.Main:AddRightTabbox()
    local fpscap = fpscap:AddTab('[ Fps Game Boost ]')

    fpscap:AddToggle('WhiteScreen', {Text = '- Enabled White Screen',Default = true,Tooltip = '- Enabled White Screen',})
    Toggles["WhiteScreen"]:OnChanged(function()
        Screen = Toggles["WhiteScreen"].Value    
    end)

    fpscap:AddButton("Fps Boost Classic", function()
        local workspace = game.Workspace
        local lighting = game.Lighting
        local terrain = workspace.Terrain

        -- Adjust Terrain properties
        terrain.WaterWaveSize = 0
        terrain.WaterWaveSpeed = 0
        terrain.WaterReflectance = 0
        terrain.WaterTransparency = 0

        -- Adjust Lighting properties
        lighting.GlobalShadows = false
        lighting.FogEnd = 9e9
        settings().Rendering.QualityLevel = "Level01"

        -- Loop through descendants to optimize specific object types
        for _, obj in pairs(workspace:GetDescendants()) do
            if obj:IsA("Part") or obj:IsA("Union") or obj:IsA("CornerWedgePart") or obj:IsA("TrussPart") then
                obj.Reflectance = 0
            elseif obj:IsA("Decal") or obj:IsA("Texture") then
                obj.Transparency = 0
            elseif obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                obj.Lifetime = NumberRange.new(0)
            elseif obj:IsA("Explosion") then
                obj.BlastPressure = 0
                obj.BlastRadius = 0
            elseif obj:IsA("Fire") or obj:IsA("SpotLight") or obj:IsA("Smoke") or obj:IsA("Sparkles") then
                obj.Enabled = false
            elseif obj:IsA("MeshPart") then
                obj.Reflectance = 0
            end
            if obj:IsA("Fire") then
                obj:Destroy()
                wait()
            end
            if obj:IsA("ParticleEmitter") then
                obj:Destroy()
                wait()
            end
        end

        -- Disable specific lighting effects
        for _, effect in pairs(lighting:GetChildren()) do
            if effect:IsA("BlurEffect") or effect:IsA("SunRaysEffect") or effect:IsA("ColorCorrectionEffect") or
            effect:IsA("BloomEffect") or effect:IsA("DepthOfFieldEffect") then
                effect.Enabled = false
            end
        end

        -- Set the hidden property "Technology" to "Compatibility" for Lighting
        sethiddenproperty(lighting, "Technology", "Compatibility")
    end)
    fpscap:AddButton("Fps Boost Normal", function()
        local workspace = game.Workspace
        local lighting = game.Lighting
        local terrain = workspace.Terrain

        -- Adjust Terrain properties
        terrain.WaterWaveSize = 0
        terrain.WaterWaveSpeed = 0
        terrain.WaterReflectance = 0
        terrain.WaterTransparency = 0

        -- Adjust Lighting properties
        lighting.GlobalShadows = false
        lighting.FogEnd = 9e9
        settings().Rendering.QualityLevel = "Level01"

        -- Loop through descendants to optimize specific object types
        for _, obj in pairs(workspace:GetDescendants()) do
            if obj:IsA("Part") or obj:IsA("Union") or obj:IsA("CornerWedgePart") or obj:IsA("TrussPart") then
                obj.Reflectance = 0
            elseif obj:IsA("Decal") or obj:IsA("Texture") then
                obj.Transparency = 0
            elseif obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                obj.Lifetime = NumberRange.new(0)
            elseif obj:IsA("Explosion") then
                obj.BlastPressure = 0
                obj.BlastRadius = 0
            elseif obj:IsA("Fire") or obj:IsA("SpotLight") or obj:IsA("Smoke") or obj:IsA("Sparkles") then
                obj.Enabled = false
            elseif obj:IsA("MeshPart") then
                obj.Reflectance = 0
            end
            if obj:IsA("Fire") then
                obj:Destroy()
                wait()
            end
            if obj:IsA("ParticleEmitter") then
                obj:Destroy()
                wait()
            end
        end

        -- Disable specific lighting effects
        for _, effect in pairs(lighting:GetChildren()) do
            if effect:IsA("BlurEffect") or effect:IsA("SunRaysEffect") or effect:IsA("ColorCorrectionEffect") or
            effect:IsA("BloomEffect") or effect:IsA("DepthOfFieldEffect") then
                effect.Enabled = false
            end
        end

        -- Set the hidden property "Technology" to "Compatibility" for Lighting
        sethiddenproperty(lighting, "Technology", "Compatibility")
    end)
    fpscap:AddButton("Fps Boost Very Low Pc", function()
        local workspace = game.Workspace
        local lighting = game.Lighting
        local terrain = workspace.Terrain

        -- Adjust Terrain properties
        terrain.WaterWaveSize = 0
        terrain.WaterWaveSpeed = 0
        terrain.WaterReflectance = 0
        terrain.WaterTransparency = 0

        -- Adjust Lighting properties
        lighting.GlobalShadows = false
        lighting.FogEnd = 9e9
        lighting.Brightness = 0
        settings().Rendering.QualityLevel = "Level01"

        -- Loop through descendants to optimize specific object types
        for _, obj in pairs(workspace:GetDescendants()) do
            if obj:IsA("Part") or obj:IsA("Union") or obj:IsA("CornerWedgePart") or obj:IsA("TrussPart") then
                obj.Material = "Plastic"  -- Changed from setting Reflectance to changing Material for parts
                obj.Reflectance = 0
            elseif obj:IsA("Decal") or obj:IsA("Texture") then
                obj.Transparency = 0
            elseif obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                obj.Lifetime = NumberRange.new(0)
            elseif obj:IsA("Explosion") then
                obj.BlastPressure = 0
                obj.BlastRadius = 0
            elseif obj:IsA("Fire") or obj:IsA("SpotLight") or obj:IsA("Smoke") or obj:IsA("Sparkles") then
                obj.Enabled = false
            elseif obj:IsA("MeshPart") then
                obj.Material = "Plastic"  -- Changed from setting Reflectance to changing Material for MeshParts
                obj.Reflectance = 0
                obj.TextureID = 10385902758728957
            end
        end

        -- Disable specific lighting effects
        for _, effect in pairs(lighting:GetChildren()) do
            if effect:IsA("BlurEffect") or effect:IsA("SunRaysEffect") or effect:IsA("ColorCorrectionEffect") or
            effect:IsA("BloomEffect") or effect:IsA("DepthOfFieldEffect") then
                effect.Enabled = false
            end
        end

        -- Set the hidden property "Technology" to "Compatibility" for Lighting
        sethiddenproperty(lighting, "Technology", "Compatibility")
    end)

    webhook:AddToggle('webhook', {Text = '- Enabled Webhook',Default = false,Tooltip = '- Enabled Webhook',})
    -- webhook:AddInput('Webhooks', { Text = 'Webhook' })

    ------------------------------------- [ Task: No-Clip ] -------------------------------------

    RunService.RenderStepped:Connect(function()
        pcall(function()
            local autoFarmEnabled = _G.Save["- Enabled Kaitun"] or _G.Auto_Farm_Kaido or _G.Auto_Dungeon or _G.Auto_Farm_SeaKing or _G.Auto_Farm_HydraSeaKing or _G.Auto_Farm_GhostShip
            if autoFarmEnabled then
                if Float then
                    local rootPart = LocalPlayer.Character.HumanoidRootPart
                    if rootPart:FindFirstChild(body) then
                        rootPart[body]:Destroy()
                    end
                end
                
                local character = LocalPlayer.Character
                if character and character:FindFirstChild("Humanoid") and character.Humanoid.Health > 0 then
                    if not Float then
                        CreateF()
                    end
                    for _, child in pairs(character:GetDescendants()) do
                        if child:IsA("BasePart") and child.CanCollide then
                            child.CanCollide = false
                        end
                    end
                else
                    local rootPart = LocalPlayer.Character.HumanoidRootPart
                    if rootPart:FindFirstChild(body) then
                        rootPart[body]:Destroy()
                    end
                end
            else
                local rootPart = LocalPlayer.Character.HumanoidRootPart
                if rootPart:FindFirstChild(body) then
                    rootPart[body]:Destroy()
                end
            end
        end)
    end)

    ------------------------------------- [ Task: Auto_Farm ] -------------------------------------

    FunctionTask["Auto Kaitun"] = function()
        while true do task.wait()

            if Library.Unloaded then
                break
            end

            if _G.Save["- Enabled Kaitun"] then
                warn("Fenril Hub | Run: Work | Loaded")
                local Success, Err = pcall(function()
                    local Current_QuestData = GetQuestData()
                    local Quest_NPC = GetNPC(Current_QuestData.Quest)
                    local Entity  = GetEntity(Current_QuestData.Entity)
                    local SecondSeaProgression = PlayerStats:FindFirstChild("SecondSeaProgression").Value
                    local IsSecondSea = PlayerStats:FindFirstChild("IsSecondSea").Value
                    local level = PlayerStats.lvl.Value
                    local getmap = PlayerGui.Stats.Button.Inventory_Frame:FindFirstChild("ScrollingFrameMaterial")

                    ---------------------- [ Task: RedeemCode ]  ----------------------
                    if PlayerStats.beli.Value < 1000 then
                        redeemCode("3xilescha1r")
                        redeemCode("1MLikes")
                        redeemCode("2BVisits")
                        redeemCode("Update4.6YAY")
                        redeemCode("Peodiz")
                        redeemCode("DinoxLive")
                        redeemCode("Sub2Leepungg")
                        redeemCode("Update4.7")
                        redeemCode("DiamondSlayer")
                    end

                    ---------------------- [ Task: Farm Bounty Player ]  ----------------------
                    if string.find(PlayerGui.Stats.Main.Lvl.Text, "(Max)") then
                       print(1)
                    end

                    ---------------------- [ Task: Riads Quest ]  ----------------------
                    if Second then
                        local function HandleRaid(entity, raidFunction)
                            if entity and entity:FindFirstChild("Humanoid") and entity:FindFirstChild("Humanoid").Health > 0 and _G.Save["- Enabled Kaitun"] then
                                raidFunction()
                            end
                        end

                        local SeaMonster = Workspace:WaitForChild("SeaMonster")
                        local GhostMonster = Workspace:WaitForChild("GhostMonster")

                        local Raids = {
                            {Entity = SeaMonster:FindFirstChild("SeaKing"), Function = SeaKing},
                            {Entity = SeaMonster:FindFirstChild("HydraSeaKing"), Function = HydraSeaKing},
                            {Entity = GhostMonster:FindFirstChild("Ghost Ship"), Function = GhostShip},
                        }

                        for _, RaidData in pairs(Raids) do
                            HandleRaid(RaidData.Entity, RaidData.Function)
                        end
                    end                          

                    ---------------------- [ Task: SecondSea IsSecondSea ]  ----------------------
                    if level >= 2250 and SecondSeaProgression == "No" and IsSecondSea == "No" then
                        local Traveler = GetNPC("Traveler")
                        local Seasoned = Workspace.Monster.Boss:FindFirstChild("Seasoned Fishman [Lv. 2200]")
                        
                        local function TeleportToTraveler()
                            Teleport(Traveler.CFrame)
                            TalkNPC(Traveler)
                        end
                    
                        if not getmap:FindFirstChild("Map") then
                            if LocalPlayer.CurrentQuest.Value ~= "Second Sea Map" then
                                warn("Get Second Sea Map")
                                if IsDialog("Traveler") then
                                    QuestAccept("Traveler")
                                elseif Traveler then
                                    TeleportToTraveler()
                                end
                            else
                                if Seasoned and Seasoned:FindFirstChild("Humanoid") and Seasoned:FindFirstChild("Humanoid").Health >= 1 and _G.Save["- Enabled Kaitun"] then
                                    repeat
                                        task.wait()
                                        Teleport(Seasoned.HumanoidRootPart.CFrame, true)
                                        attack()
                                    until Seasoned.Humanoid.Health <= 0 or not _G.Save["- Enabled Kaitun"]
                                else
                                    wait(1)
                                    Teleport(CFrame.new(-1851.9224853515625, 45.150447845458984, 6676.36572265625))
                                end
                            end
                        elseif getmap:FindFirstChild("Map") and SecondSeaProgression == "No" and IsSecondSea == "No" then
                            if IsDialog("Traveler") then
                                QuestAccept("Traveler")
                            elseif Traveler then
                                TeleportToTraveler()
                            end
                        end
                    end                                     

                    -- if level >= 2250 and SecondSeaProgression == "Yes" then
                    --     if IsSecondSea == "No" then
                    --         local ElitePirate = GetNPC("Elite Pirate")
                    --         if IsDialog("Elite Pirate") then
                    --             QuestAccept("Elite Pirate")
                    --         elseif ElitePirate then
                    --             Teleport(ElitePirate.CFrame)
                    --             TalkNPC(ElitePirate)
                    --         end
                    --         if IsSecondSea ~= "No" then
                    --             return
                    --         end
                    --     end
                    -- end

                    ---------------------- [ Task: Go to IsSecondSea ]  ----------------------
                    if level >= 2250 and SecondSeaProgression == "Yes" and IsSecondSea == "No" then
                        local ElitePirate = GetNPC("Elite Pirate")
                        if ElitePirate then
                            if IsDialog("Elite Pirate") then
                                QuestAccept("Elite Pirate")
                            else
                                Teleport(ElitePirate.CFrame)
                                TalkNPC(ElitePirate)
                            end
                        end
                    end

                    if not PlayerStats.FightingStyle.Value == "DarkLeg" and PlayerStats.beli.Value >= 150000 then
                        local swordShopCFrame = CFrame.new(-4200.18408203125, 108.5559310913086, -2939.687255859375)
                        BuyItem("DarkLegShop", "DarkLeg", 150000, swordShopCFrame)
                    elseif not LocalPlayer.Inventory:FindFirstChild("Katana") and PlayerStats.beli.Value >= 5000 then
                        local swordShopCFrame = CFrame.new(-2138.22412109375, 48.235816955566406, -4436.43017578125)
                        BuyItem("SwordShop", "Katana", 5000, swordShopCFrame)
                    elseif not LocalPlayer.Inventory:FindFirstChild("Mini Mace") and PlayerStats.beli.Value >= 3000000 then
                        local Mini = CFrame.new(2527.49951, 310.206482, -1582.66479, 0.86898458, 0, 0.494839221, 0, 1, 0, -0.494839221, 0, 0.86898458)
                        BuyItem("SwordShop", "Mini Mace", 3000000, Mini)  
                    elseif not PlayerStats.DragonClawBought.Value and PlayerStats.beli.Value >= 1250000 then
                        _G.Save["- Enabled Kaitun"] = false
                        local DragonClawCFrame = GetNPC("DragonClawShop").CFrame
                        BuyItem("DragonClawShop", "DragonClaw", 1250000, DragonClawCFrame)
                        wait(1)
                        _G.Save["- Enabled Kaitun"] = true
                    elseif not PlayerStats.CyborgBought.Value and PlayerStats.beli.Value >= 1000000 then
                        _G.Save["- Enabled Kaitun"] = false
                        local CyborgCFrame = GetNPC("CyborgShop").CFrame
                        BuyItem("CyborgShop", "Cyborg", 1000000, CyborgCFrame)
                        wait(1)
                        _G.Save["- Enabled Kaitun"] = true
                    end

                    ---------------------- [ Task: เช็คเควส ]  ----------------------
                    if IsQuest(Current_QuestData.QuestData) then
                        if Entity then
                            Workspace.Camera.CameraSubject = Quest_NPC
                            repeat
                                task.wait()
                                Teleport(Entity.HumanoidRootPart.CFrame, true)
                                attack()
                            until Entity.Humanoid.Health <= 0 or not _G.Save["- Enabled Kaitun"]
                        else
                            Workspace.Camera.CameraSubject = LocalPlayer.Character.Humanoid
                            if Entity == "Dough Master [Lv. 3275]" then
                                repeat task.wait()
                                    Teleport(CFrame.new(30308.935546875, 65.45161437988281, 93190.9375))
                                until Entity or not _G.Save["- Enabled Kaitun"]
                            end
                        end
                    else
                        ---------------------- [ Task: รับเควส ]  ----------------------
                        if IsDialog(Current_QuestData.Quest) then
                            QuestAccept(Current_QuestData.Quest)
                            --FireDialog(Current_QuestData.Quest, "Accept")
                        elseif Quest_NPC then
                            Teleport(Quest_NPC.CFrame)
                            TalkNPC(Quest_NPC)
                        end
                    end



                    --- [ Task: Stats ] ---                   
                    function fireStatsEvent(statType, selectPoint)
                        PlayerGui.Stats.Button.StatsFrame.RemoteEvent:FireServer(statType, selectPoint)
                    end
                    

                    ---------------------- [ Task: lowerTorso ]  ----------------------
                    local lowerTorso = LocalPlayer.Character:FindFirstChild("LowerTorso")
                
                    if lowerTorso then
                        if level < 2250 or (Second and level >= 2250) then
                            Teleport(Quest_NPC.CFrame * CFrame.new(0, 225, 0))
                            lowerTorso:Destroy()

                            local DeleteEffect = ReplicatedStorage:FindFirstChild("Chest")
                            local DeleteDamage = Workspace:FindFirstChild("DamageShow")
                            pcall(function()
                                if DeleteDamage and DeleteEffect then
                                    DeleteParticleEmitters(DeleteEffect:FindFirstChild("FruitEffect"):GetDescendants())
                                    DeleteParticleEmitters(DeleteEffect:FindFirstChild("SwordEffect"):GetDescendants())
                                    DeleteParticleEmitters(DeleteEffect:FindFirstChild("MeleeEffect"):GetDescendants())
                                    DeleteDamage:Destroy()
                                end
                            end)
                        end
                    end     
                    
                    task.spawn(function()
                        local PlayerStats = PlayerStats
                        local hasKatana = LocalPlayer.Inventory:FindFirstChild("Katana")
                        local swordValue = PlayerStats.sword.Value
                        local meleeValue = PlayerStats.Melee.Value
                        
                        if not hasKatana and not meleeValue == 5000 then
                            fireStatsEvent("Melee", 100)
                        elseif hasKatana and not swordValue == 5000 then
                            fireStatsEvent("Sword", 100)
                        elseif swordValue == 5000 and not meleeValue == 5000 then
                            fireStatsEvent("Melee", 100)
                        elseif meleeValue == 5000 then
                            fireStatsEvent("Defense", 100)
                        end
                        -- You can uncomment the lines below if needed
                        -- fireStatsEvent("Devil Fruit", 100)
                        -- fireStatsEvent("Defense", 100)
                    end)
                end)
                if Err then
                    warn("Auto Kaitun",Err)
                end
            end
            ----------[ Set: fpscap ] ----------
            setfpscap(200)
        end
    end
    
    ------------------------------------- [ Task: White_Screen ] -------------------------------------

    FunctionTask["White_Screen"] = function()
        while true do task.wait()
            if Library.Unloaded then
                break
            end

            local userInputService = game:GetService("UserInputService")
            local runService = game:GetService("RunService")
        
            userInputService.WindowFocused:Connect(function()
                if Screen then
                    runService:Set3dRenderingEnabled(true)
                end
            end)
        
            userInputService.WindowFocusReleased:Connect(function()
                if Screen then
                    runService:Set3dRenderingEnabled(false)
                end
            end)
        end
    end

    ------------------------------------- [ Task: Webhooks Raids ] -------------------------------------

    FunctionTask["Webhooks Raids"] = function()
        local webhooks = "1084069802131337328/uJyfaRwRceIOQjupWw9y-fFjJTmkNq_Msc9Xpbeg-HOddaHQXfaDlfns24L1_BGri6N-"
        local url ="https://discord.com/api/webhooks/"..webhooks

        if Second and not First and not Raid and not Awakeworld then
            local SeaMonster = Workspace:WaitForChild("SeaMonster")
            local SeaKing = SeaMonster:FindFirstChild("SeaKing")
            local HydraSeaKing = SeaMonster:FindFirstChild("HydraSeaKing")
            local GhostMonster = workspace:WaitForChild("GhostMonster")
            local GhostShip = GhostMonster:FindFirstChild("Ghost Ship")

            local Three = {
                ["content"] = " ",
                ["embeds"] = {
                    {
                        ["title"] = "**Fenril Hub - Check Raids**",
                        ["description"] = "Username: " .. LocalPlayer.Name,
                        ["type"] = "rich",
                        ["color"] = tonumber(0x56bdf5),
                        ["fields"] = {
                            {["name"] = "🐬   Sea King:", ["value"] = "ㅤㅤ  Spawn: " .. Get_SpawnStatus(SeaKing), ["inline"] = true},
                            {["name"] = "🦈   Hydra SeaKing:", ["value"] = "ㅤㅤ  Spawn: " .. Get_SpawnStatus(HydraSeaKing), ["inline"] = true},
                            {["name"] = "⚓   Ghost Ship:", ["value"] = "ㅤㅤ  Spawn: " .. Get_SpawnStatus(GhostShip), ["inline"] = true},
                            {["name"] = "Server Job:", ["value"] = "```" .. game.JobId .. "```",},
                            {["name"] = "Excute this script to join server:", ["value"] = "```game:GetService('TeleportService'):TeleportToPlaceInstance(" .. tostring(game.placeId) .. ", '" .. tostring(game.jobId) .. "')```",}
                        }
                    }
                }
            }
            local newdata = game:GetService("HttpService"):JSONEncode(Three)

            local headers = {
            ["content-type"] = "application/json"
            }
            request = http_request or request or HttpPost or syn.request
            local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
            while wait(35) do
                if Library.Unloaded then
                    break
                end
                if Second then
                    if SeaKing or HydraSeaKing or GhostShip then
                        request(abcdef)
                    else
                        print("not Raids")
                    end
                end
            end
        end
    end

	FunctionTask["Webhooks Kaitun"] = function()
        local http = game:GetService("HttpService")
        local Material = http:JSONDecode(LocalPlayer.PlayerStats.Material.Value)
        local FruitStore = http:JSONDecode(LocalPlayer.PlayerStats.FruitStore.Value)


        function InventorySwords()
            local Sword = ""
            for _, v in pairs(LocalPlayer.Inventory:GetChildren()) do
                Sword = Sword ..v.Name.. "\n"
            end
            return Sword
        end

        function Accessories()
            local Accessories = ""
            for _, v in pairs(LocalPlayer.Accessories:GetChildren()) do
                Accessories = Accessories ..v.Name.. "\n"
            end
            return Accessories
        end

        function Materials()
            local Materials = ""
            for i, v in pairs(Material) do
                Materials = Materials ..i.."  x"..v.."\n"
            end
            return Materials
        end

        function FruitStores()
            local FruitStores = ""
            for i, v in pairs(FruitStore) do
                FruitStores = FruitStores ..i.." x"..v.."\n"
            end
            return FruitStores
        end

		function format_int(number)
			local i, j, minus, int, fraction = tostring(number):find('([-]?)(%d+)([.]?%d*)')
	
			int = int:reverse():gsub("(%d%d%d)", "%1,")
	
			return minus .. int:reverse():gsub("^,", "") .. fraction
		end


        local InventorySwords= InventorySwords()
        local Accessories = Accessories()
        local Materials = Materials()
        local FruitStores = FruitStores()


        local _KaitoKung = {
            ["content"] = " ",
            ["embeds"] = {
                {
                    ["description"] = "ว่างโฆษณา ติดต่อ __KaitoKung__",
                    ["color"] = tonumber(0x56bdf5),
                    ["image"] = {["url"] = "https://api.xenonhub.pro/api/v1/uploads/he9g9dha4ahj.png"}},
                {
                    ["title"] = "Fenril Hub [Kaitun Mode - Next Generations]",
                    ["description"] = "**🎁 Username: __"..LocalPlayer.Name.."__\n🍉 Devil Fruit: __"..LocalPlayer.PlayerStats.DFName.Value.."__\n⚔️ Sword: __"..LocalPlayer.PlayerStats.SwordName.Value.."__\n☄️ FightingStyle: __"..LocalPlayer.PlayerStats.FightingStyle.Value.."__\n🔮 Gem: __"..format_int(LocalPlayer.PlayerStats.Gem.Value).."__\n💸 Beli: __"..format_int(LocalPlayer.PlayerStats.beli.Value).."__\n**",
                    ["color"] = tonumber(0x56bdf5),
                    ["fields"] = {
                        {["name"] = "Inventory Swords",["value"] = "```\n"..InventorySwords.."```",["inline"] = true},
                        {["name"] = "Inventory Accessories",["value"] = "```\n"..Accessories.."```",["inline"] = true},
                        {["name"] = "Inventory Fruits",["value"] = "```\n"..FruitStores.."```",["inline"] = false},
                        {["name"] = "Inventory Material",["value"] = "```\n"..Materials.."```",["inline"] = true},
                        {["name"] = "Player Bounty",["value"] = "```\n"..LocalPlayer.leaderstats.Bounty.Value.."```",["inline"] = false},
                        {["name"] = "Player Level",["value"] = "```\n"..LocalPlayer.PlayerStats.lvl.Value.."```",["inline"] = false}
                    },
                    ["image"] = {["url"] = "https://media.tenor.com/a0C-BdZP8HwAAAAC/anime-guilty-crown.gif"},
                }
            }
        }

        local headers = {["content-type"] = "application/json"}
        request = http_request or request or HttpPost or syn.request
        local abcdef = {Url = getgenv().Webhook, Body = http:JSONEncode(_KaitoKung), Method = "POST", Headers = headers}
        while wait(2) do
            if Library.Unloaded then
                break
            end
            if Toggles["webhook"].Value then
                request(abcdef)
            end
        end
    end

    
    ------------------------------------- [ Task: Run Task ] -------------------------------------

	for TaskName, Task in pairs(FunctionTask) do
		task.spawn(Task)
	end

    
    ------------------------------------- [ END ] -------------------------------------
end
FenrilHub_KingLegacyKaitun:RUN()
